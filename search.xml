<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Vue Cli-Webpack</title>
      <link href="/2020/11/24/Vue-Cli-Webpack/"/>
      <url>/2020/11/24/Vue-Cli-Webpack/</url>
      
        <content type="html"><![CDATA[<h1 id="webpack-運行邏輯"><a href="#webpack-運行邏輯" class="headerlink" title="webpack 運行邏輯"></a>webpack 運行邏輯</h1><p><img src="https://i.imgur.com/FbxYqzy.png"><br>main.js 是主要的進入點(entry)，webpack 會監控 main.js , 當main.js 有更動時 webpack 就自動編譯，編譯成 css,js 等遊覽器看得懂的語言。<br>由於 main.js 只是一個 js 檔案，無法看得懂 .vue 或者 .scss 檔，因此 webpack 有提供 loader 工具，來幫助 main.js 理解輸出這些檔案。</p><h1 id="webpack-腳本檔案介紹"><a href="#webpack-腳本檔案介紹" class="headerlink" title="webpack 腳本檔案介紹"></a>webpack 腳本檔案介紹</h1><p>在 build 資料夾裡面有 webpack 腳本檔案，分別是:</p><ul><li>webpack.base.conf.js<ul><li>主要核心</li></ul></li><li>webpack.dev.conf.js<ul><li>給我們開發中預覽畫面用的</li></ul></li><li>webpack.prod.conf.js<ul><li>輸出真正產品用的<a id="more"></a><h1 id="webpack-base-介紹"><a href="#webpack-base-介紹" class="headerlink" title="webpack.base 介紹"></a>webpack.base 介紹</h1></li></ul></li><li>entry 進入點和 output 輸出點<br><img src="https://i.imgur.com/W3KxOwW.png"></li><li>loaer 的寫在這些 module<ul><li>test: /.(png|jpe?g|gif|svg)(?.<em>)?$/,test: /.(png|jpe?g|gif|svg)(?.</em>)?$/ 這個 loader 會將圖檔小於 10 KB 的圖檔用 base64 方式編碼呈現<br><img src="https://i.imgur.com/ykoXXUp.png"></li></ul></li><li>resolve<ul><li>extensions: [‘.js’, ‘.vue’, ‘.json’],這是讓你可以省略副檔名的</li><li>alias:裡面是放各種路徑的縮寫，像是 src 就可以用 @ 來替代<br><img src="https://i.imgur.com/DaNMMgb.png"></li></ul></li></ul><h1 id="config-環境變數"><a href="#config-環境變數" class="headerlink" title="config 環境變數"></a>config 環境變數</h1><p>在 webpack.base.conf.js 的 output 裡面你會看到它輸出的路徑 <strong>path: config.build.assetsRoot</strong>,裡面的 build 就代表 build 資料夾，裡面檔案如下：</p><ul><li>index.js 代表整個運行環境，比如設定 port 口</li><li>dev.env.js 設定開發時的環境變數</li><li>prod.env.js 設定發布時的環境變數</li><li>開發時和發布時環境變數可能不太一樣(ajax路徑不相同)<h1 id="自定義環境變數"><a href="#自定義環境變數" class="headerlink" title="自定義環境變數"></a>自定義環境變數</h1></li></ul><p>1.我們在 dev.env.js 的 module.exports 底下新增一個環境變數<br>記得除了加上’’外還要加””，不然會出錯，還有記得改完後要重啟環境，因為我們新增的是環境變數。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HTTP_PATH: &#39;&quot;http:&#x2F;&#x2F;localhost&#x2F;&quot;&#39;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/A6C8oJM.png"><br>2.最後我們來到 scr/components 裡面的 App.vue 檔，移到最下面 js 部分，在 return 資料的部分，我們輸出兩個環境變數</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msg: process.env.NODE_ENV,</span><br><span class="line">http: process.env.HTTP_PATH</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/JtcpnN8.png"><br>3.使用 <strong>npm run dev</strong>重啟環境，環境變數加入成功<br><img src="https://i.imgur.com/RoFpHJn.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue Cli-簡介</title>
      <link href="/2020/11/23/Vue-Cli%E7%B0%A1%E4%BB%8B/"/>
      <url>/2020/11/23/Vue-Cli%E7%B0%A1%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-Cli-介紹"><a href="#Vue-Cli-介紹" class="headerlink" title="Vue Cli 介紹"></a>Vue Cli 介紹</h1><ol><li>基於 Webpack 所建置的開發工具<ul><li>Webpack: 現在前端技術發展快速，多了很多 Preprocess (前處理器)工具與框架，像是Scss,Vue， 但是瀏覽器只看得懂(js,css,html)，因此Webpack 就出現了，它幫我們編譯Preprocess 成瀏覽器得懂的內容然後打包成一包 dis 發布檔，直接讓後端上傳到 server。<br><img src="https://i.imgur.com/P7hOVln.png"><a id="more"></a></li></ul></li><li>方便使用各種第三方套件(BS4,Vue Router)</li><li>可以運行 Sass,Bebel 等編譯工具</li><li>便於開發 SPA 網頁工具</li><li>快速搭建開發環境</li></ol><h1 id="Vue-Cli-建構"><a href="#Vue-Cli-建構" class="headerlink" title="Vue Cli 建構"></a>Vue Cli 建構</h1><ol><li><p>安裝 <a href="https://nodejs.org/en/">Node.js</a></p> <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v <span class="comment">//確認 node 安裝成功</span></span><br></pre></td></tr></table></figure></li><li><p>安裝 <a href="https://cli.vuejs.org/guide/installation.html">Vue Cli</a></p> <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-cli -g <span class="comment">// 以全域方式安裝 vue-cli 2.版本</span></span><br></pre></td></tr></table></figure></li><li><p>啟用 webpack</p> <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">vue list  <span class="comment">// 列出可用樣板</span></span><br><span class="line">vue init webpack test <span class="comment">// vue init 樣板名稱 專案名稱</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/9c3EgkL.png"><br><img src="https://i.imgur.com/Dv8w0Dm.png"></p></li></ol><ol start="4"><li><p>安裝模組</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install &#x2F;&#x2F;安裝package.json內相依套件 </span><br><span class="line">&#x2F;&#x2F; 安裝完後就會多一個 node_modules 的資料夾</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/9ZcOby3.png"></p></li><li><p>執行測試環境</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev &#x2F;&#x2F;執行測試環境</span><br></pre></td></tr></table></figure><p> <img src="https://i.imgur.com/lsD2Ms9.png"></p></li></ol><p>   <img src="https://i.imgur.com/FijGIsb.png"></p><ol start="6"><li><p>正式發布檔</p> <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build <span class="comment">// 目錄會多 dis 資料夾 裡面的檔案是正式要放到 server的</span></span><br></pre></td></tr></table></figure><p> <img src="https://i.imgur.com/PFdom52.png"></p></li></ol><h1 id="Vue-Cli-資料夾結構"><a href="#Vue-Cli-資料夾結構" class="headerlink" title="Vue Cli 資料夾結構"></a>Vue Cli 資料夾結構</h1><ol><li><p>主檔案結構</p><p><img src="https://i.imgur.com/lecm6cz.png"></p></li></ol><ol start="2"><li><p>被注入程式的 index.html</p><p><img src="https://i.imgur.com/QZ1ZfsB.png"></p></li></ol><ol start="3"><li><p>scr </p><ul><li>main.js 是所有 Vue.js 的進入點 entry，程式會注入到 index.html</li></ul><p><img src="https://i.imgur.com/Sgk77Fv.png"></p><ul><li>assets 資料夾裡面放會被編譯的檔案，像是圖檔小於某個大小，圖檔會用 base64 編譯</li></ul></li><li><p>satic 資料夾內檔案不會被編譯</p></li><li><p>dis 資料夾</p><ul><li>裡面的 index.hml 是正式發布的檔案，需要用 server 執行</li></ul></li></ol><p><img src="https://i.imgur.com/GGV96D1.png"></p><ol start="6"><li>build 資料夾<ul><li>裡面有 webpack 的設定檔</li></ul></li><li>config 資料夾<ul><li>裡面有設定環境變數的檔案</li></ul></li><li>node_modules<ul><li>裡面為所有安裝的套件，套件清單在 package.json</li></ul></li><li>.babelrc<ul><li>ES6 語法不能在所有瀏覽器上執行，透過 Beble 可以編譯 ES6 成為大部分瀏覽器可以了解的語法</li></ul></li><li>.postcssrc.js<ul><li>css 前處理器的編譯器</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day29] CSS display複習</title>
      <link href="/2020/10/13/%5BDay29%5D%20CSS%20display%E8%A4%87%E7%BF%92/"/>
      <url>/2020/10/13/%5BDay29%5D%20CSS%20display%E8%A4%87%E7%BF%92/</url>
      
        <content type="html"><![CDATA[<h2 id="display-block-區塊元素介紹"><a href="#display-block-區塊元素介紹" class="headerlink" title="display:block 區塊元素介紹"></a>display:block 區塊元素介紹</h2><ul><li>特性<ul><li>h1,ul,li,p</li><li>占滿整個版面</li><li>可設定寬高</li><li>會另起一行來呈現</li><li>display: block</li><li>可以包行內元素</li><li>div排版用區塊標籤</li><li><a href="https://codepen.io/lpfpgnsq/pen/BajJwOy">範例</a><h2 id="display-inline-行內元素介紹"><a href="#display-inline-行內元素介紹" class="headerlink" title="display:inline 行內元素介紹"></a>display:inline 行內元素介紹</h2></li></ul></li><li>特性<ul><li>不會換行</li><li>span排版用行內標籤</li><li>不能設定寬高</li><li>改成display: block（a標籤要讓人好點擊時）</li><li><a href="https://codepen.io/lpfpgnsq/pen/dyGJVww">範例</a></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day27] jsES6語法-解構(下)</title>
      <link href="/2020/10/11/%5BDay27%5D%20jsES6%E8%AA%9E%E6%B3%95-%E8%A7%A3%E6%A7%8B(%E4%B8%8B)/"/>
      <url>/2020/10/11/%5BDay27%5D%20jsES6%E8%AA%9E%E6%B3%95-%E8%A7%A3%E6%A7%8B(%E4%B8%8B)/</url>
      
        <content type="html"><![CDATA[<p>我們也可以把解構方法用在物件裡面，把 family 的值傳到 Min ，並且用 Leo 的名稱來代替他，當我們使用 console 顯示 Leo 時，就會顯示小明。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> family = &#123;</span><br><span class="line">    Min:<span class="string">&#x27;小明&#x27;</span>,</span><br><span class="line">    Mo:<span class="string">&#x27;媽媽&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> &#123; <span class="attr">Min</span>:Leo&#125; = family;</span><br><span class="line"><span class="built_in">console</span>.log(Leo);</span><br></pre></td></tr></table></figure><p>如果我們的解構值後面只有一個值，那麼他會預設先給第一個值，小明就會被換成阿明，當我們console ming 時，他會顯示阿明。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> [ming = <span class="string">&#x27;小明&#x27;</span>,jay = <span class="string">&#x27;杰倫&#x27;</span>]=[<span class="string">&#x27;阿明&#x27;</span>];</span><br><span class="line"><span class="built_in">console</span>.log(ming,jay)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day26]  jsES6語法-解構(上)</title>
      <link href="/2020/10/10/%5BDay26%5D%20jsES6%E8%AA%9E%E6%B3%95-%E8%A7%A3%E6%A7%8B(%E4%B8%8A)/"/>
      <url>/2020/10/10/%5BDay26%5D%20jsES6%E8%AA%9E%E6%B3%95-%E8%A7%A3%E6%A7%8B(%E4%B8%8A)/</url>
      
        <content type="html"><![CDATA[<p>我們可以使用解構的方式，將右邊的值給映射到左邊，比如將 family 的值映射到變數 ming,father,mother 裡面。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> family = [<span class="string">&#x27;小明&#x27;</span>,<span class="string">&#x27;爸爸&#x27;</span>,<span class="string">&#x27;媽媽&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> [ming,father,mother] = family</span><br><span class="line"><span class="built_in">console</span>.log(ming,father,mother)</span><br></pre></td></tr></table></figure><p>我們也可以用這種方式來交換數值，而不用像先前一樣多宣告一個變數來交換值。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> mother = <span class="string">&#x27;媽媽&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> father = <span class="string">&#x27;爸爸&#x27;</span>;</span><br><span class="line">[mother,father] = [father,mother];</span><br><span class="line"><span class="built_in">console</span>.log(mother,father);</span><br></pre></td></tr></table></figure><p>我們也可以直接使用解構的方式，將 str 字串的值給取出來，映射到 a b c 變數中。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;你好嗎&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> [a,b,c] = str;</span><br><span class="line"><span class="built_in">console</span>.log(a,b,c)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day25] jsES6語法-常用陣列方法(下)</title>
      <link href="/2020/10/09/%5BDay25%5D%20jsES6%E8%AA%9E%E6%B3%95-%E5%B8%B8%E7%94%A8%E9%99%A3%E5%88%97%E6%96%B9%E6%B3%95(%E4%B8%8B)/"/>
      <url>/2020/10/09/%5BDay25%5D%20jsES6%E8%AA%9E%E6%B3%95-%E5%B8%B8%E7%94%A8%E9%99%A3%E5%88%97%E6%96%B9%E6%B3%95(%E4%B8%8B)/</url>
      
        <content type="html"><![CDATA[<h2 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h2><p>當我們想要過濾陣列的資料，可以使用 filter 方法，它會return 條件相符合的陣列，比如我們設定 money 的條件 &gt; 100 ，就可以篩選出兩個物件。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> people = [</span><br><span class="line">    &#123;</span><br><span class="line">        name:<span class="string">&#x27;Leo&#x27;</span>,</span><br><span class="line">        money:<span class="number">200</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name:<span class="string">&#x27;Peter&#x27;</span>,</span><br><span class="line">        money:<span class="number">200</span></span><br><span class="line">    &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> filterPeople = people.filter(<span class="function"><span class="keyword">function</span>(<span class="params">item,index</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(item.money&gt;<span class="number">100</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(filterPeople)</span><br></pre></td></tr></table></figure><h2 id="find"><a href="#find" class="headerlink" title="find"></a>find</h2><p>和 filter 最大的差異在於，find 只回傳第一個符合條件的值，就此就算我們設定 money 的條件 &gt; 100 ，也只會回傳第一個物件的值。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> people = [</span><br><span class="line">    &#123;</span><br><span class="line">        name:<span class="string">&#x27;Leo&#x27;</span>,</span><br><span class="line">        money:<span class="number">200</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name:<span class="string">&#x27;Peter&#x27;</span>,</span><br><span class="line">        money:<span class="number">200</span></span><br><span class="line">    &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> findPeople = people.find(<span class="function"><span class="keyword">function</span>(<span class="params">item,index</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(item.money&gt;<span class="number">100</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(findPeople)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day24] jsES6語法-常用陣列方法(中）</title>
      <link href="/2020/10/08/%5BDay24%5D%20jsES6%E8%AA%9E%E6%B3%95-%E5%B8%B8%E7%94%A8%E9%99%A3%E5%88%97%E6%96%B9%E6%B3%95(%E4%B8%AD)/"/>
      <url>/2020/10/08/%5BDay24%5D%20jsES6%E8%AA%9E%E6%B3%95-%E5%B8%B8%E7%94%A8%E9%99%A3%E5%88%97%E6%96%B9%E6%B3%95(%E4%B8%AD)/</url>
      
        <content type="html"><![CDATA[<h2 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h2><p>如果我們想存取陣列裡面每一個東西，通常會使用到 for 迴圈，如果我們今天想要讓程式更簡潔一些，可以使用 forEach 方法，他可以自動存取陣列裡面的值而不要設定初始值和條件。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> people = [</span><br><span class="line">    &#123;</span><br><span class="line">        name:<span class="string">&#x27;Leo&#x27;</span>,</span><br><span class="line">        money:<span class="number">100</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name:<span class="string">&#x27;Peter&#x27;</span>,</span><br><span class="line">        money:<span class="number">200</span></span><br><span class="line">    &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">people.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item,index</span>)</span>&#123;</span><br><span class="line">    item.icash = item.money + <span class="number">100</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(item)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><p>與 forEach 和 map 最大的差異在於，map 必須回傳東西，除此之外他的功能就和 forEach 一樣，如果我們今天沒有 return 值，就會回傳 undefined。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> people = [</span><br><span class="line">    &#123;</span><br><span class="line">        name:<span class="string">&#x27;Leo&#x27;</span>,</span><br><span class="line">        money:<span class="number">100</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name:<span class="string">&#x27;Peter&#x27;</span>,</span><br><span class="line">        money:<span class="number">200</span></span><br><span class="line">    &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> newpeople = people.map(<span class="function"><span class="keyword">function</span>(<span class="params">item,index</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        ...item,</span><br><span class="line">        icash:item.money+<span class="number">500</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(newpeople);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day23] jsES6語法-常用陣列方法(上)</title>
      <link href="/2020/10/07/%5BDay23%5D%20jsES6%E8%AA%9E%E6%B3%95-%E5%B8%B8%E7%94%A8%E9%99%A3%E5%88%97%E6%96%B9%E6%B3%95(%E4%B8%8A)/"/>
      <url>/2020/10/07/%5BDay23%5D%20jsES6%E8%AA%9E%E6%B3%95-%E5%B8%B8%E7%94%A8%E9%99%A3%E5%88%97%E6%96%B9%E6%B3%95(%E4%B8%8A)/</url>
      
        <content type="html"><![CDATA[<h2 id="every"><a href="#every" class="headerlink" title="every"></a>every</h2><p>如果我們想要確認陣列裡面的資料都符合條件，我們可以在陣列裡面使用 every 條件來篩選， return 後面的條件式如果全部符合條件就會回傳 true，如果沒有就是回傳 false。像是陣列 people 裡面只有一個物件的 money &gt; 150 ，因此會回傳 false。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> people = [</span><br><span class="line">    &#123;</span><br><span class="line">        name:<span class="string">&#x27;Leo&#x27;</span>,</span><br><span class="line">        money:<span class="number">100</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name:<span class="string">&#x27;Peter&#x27;</span>,</span><br><span class="line">        money:<span class="number">200</span></span><br><span class="line">    &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> ans = people.every(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> item.money &gt; <span class="number">150</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(ans)</span><br></pre></td></tr></table></figure><h2 id="some"><a href="#some" class="headerlink" title="some"></a>some</h2><p>和 every 最大的差異在於，陣列裡面只要有條件符合，就會回傳 true ，比如有有其中一個物件的 money &gt; 150 ，最後就會回傳 true。 </p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> people = [</span><br><span class="line">    &#123;</span><br><span class="line">        name:<span class="string">&#x27;Leo&#x27;</span>,</span><br><span class="line">        money:<span class="number">100</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name:<span class="string">&#x27;Peter&#x27;</span>,</span><br><span class="line">        money:<span class="number">200</span></span><br><span class="line">    &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> ans = people.some(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> item.money &gt; <span class="number">150</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(ans)</span><br></pre></td></tr></table></figure><h2 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h2><p> 參數 prev 代表先前的值，而 prev 的初始值就是 reduce 的第二個參數，像這範例就是 0，最後我們將陣列的值全部加起來，得到 300 的總和。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> people = [</span><br><span class="line">    &#123;</span><br><span class="line">        name:<span class="string">&#x27;Leo&#x27;</span>,</span><br><span class="line">        money:<span class="number">100</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name:<span class="string">&#x27;Peter&#x27;</span>,</span><br><span class="line">        money:<span class="number">200</span></span><br><span class="line">    &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> ans = people.reduce(<span class="function"><span class="keyword">function</span>(<span class="params">prev,item</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> prev+item.money</span><br><span class="line">&#125;,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(ans);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day22] jsES6語法-縮寫用法</title>
      <link href="/2020/10/06/%5BDay22%5D%20jsES6%E8%AA%9E%E6%B3%95-%E7%B8%AE%E5%AF%AB%E7%94%A8%E6%B3%95/"/>
      <url>/2020/10/06/%5BDay22%5D%20jsES6%E8%AA%9E%E6%B3%95-%E7%B8%AE%E5%AF%AB%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>如果我們宣告兩個物件 milk 和 fruits，並且要生成一個新的物件 dic 去存放這兩個物件。如果我們將 dic 裡面的物件名稱和我們設定的物件值設為一樣，此時我們可以省略掉後面的物件值，像是 dic 2 的物件宣告方式。最後 dic 和 dic2 得到的結果會是一樣的。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> milk = <span class="string">&#x27;牛奶&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> fruits = &#123;</span><br><span class="line">    apple:<span class="string">&#x27;蘋果&#x27;</span>,</span><br><span class="line">    banana:<span class="string">&#x27;香蕉&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> dic = &#123;</span><br><span class="line">    fruits:fruits,</span><br><span class="line">    milk:milk</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> dic2 = &#123;</span><br><span class="line">    fruits,</span><br><span class="line">    milk</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果之後學到 Vue router，就很常會使用到這個縮寫用法。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;/App&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    router:router,<span class="comment">//可以縮寫成 router</span></span><br><span class="line">    template:<span class="string">&#x27;&lt;App/&gt;&#x27;</span>,</span><br><span class="line">    component:&#123;App&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day21] jsES6語法-字串模板 Template String</title>
      <link href="/2020/10/05/%5BDay21%5D%20jsES6%E8%AA%9E%E6%B3%95-%E5%AD%97%E4%B8%B2%E6%A8%A1%E6%9D%BF%20Template%20String/"/>
      <url>/2020/10/05/%5BDay21%5D%20jsES6%E8%AA%9E%E6%B3%95-%E5%AD%97%E4%B8%B2%E6%A8%A1%E6%9D%BF%20Template%20String/</url>
      
        <content type="html"><![CDATA[<p>如果我們要我們今天要再字串裡面加入值，就會需要使用到+號。常常我們如果要想要使用 innerHTML 來渲染變數，就會在變數裡面存放一大串的 html 結構，並且用+號將數值連起來，如果為了排版，我們還必須加上\ 來換行，這樣其實相當麻煩。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> dataArr = [<span class="string">&#x27;Peter&#x27;</span>,<span class="string">&#x27;Merry&#x27;</span>,<span class="string">&#x27;Leo&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> text = <span class="string">&#x27;我叫做&#x27;</span>+dataArr[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">console</span>.log(text);</span><br><span class="line"><span class="keyword">let</span> list = <span class="string">&#x27;&lt;ul&gt;\</span></span><br><span class="line"><span class="string">&lt;li&gt;&#x27;</span>+dataArr[<span class="number">0</span>]+<span class="string">&#x27;&lt;/li&gt;\</span></span><br><span class="line"><span class="string">&lt;li&gt;&#x27;</span>+dataArr[<span class="number">1</span>]+<span class="string">&#x27;&lt;/li&gt;\</span></span><br><span class="line"><span class="string">&lt;li&gt;&#x27;</span>+dataArr[<span class="number">2</span>]+<span class="string">&#x27;&lt;/li&gt;\</span></span><br><span class="line"><span class="string">&lt;ul&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure><p>如果我們ES6 新的模板語法，就可以省去這些麻煩。我們可以直接使用模板語法，並且將想要打的標籤結構還有值輸入進’’(是鍵盤1旁邊的符號，不是這個，因為如果使用它，it邦內建是反紅色的語法，所以打不出來)內，記得如果是值的呈現要加上${}，才可以正確顯示出值來。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> dataArr = [<span class="string">&#x27;Peter&#x27;</span>,<span class="string">&#x27;Merry&#x27;</span>,<span class="string">&#x27;Leo&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> text = <span class="string">`我叫做<span class="subst">$&#123;dataArr[<span class="number">0</span>]&#125;</span>`</span>;</span><br><span class="line"><span class="keyword">let</span> list = <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;ul&gt;</span></span><br><span class="line"><span class="string">       &lt;li&gt;<span class="subst">$&#123;dataArr[<span class="number">0</span>]&#125;</span>&lt;/li&gt;</span></span><br><span class="line"><span class="string">       &lt;li&gt;<span class="subst">$&#123;dataArr[<span class="number">1</span>]&#125;</span>&lt;/li&gt;</span></span><br><span class="line"><span class="string">       &lt;li&gt;<span class="subst">$&#123;dataArr[<span class="number">2</span>]&#125;</span>&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;ul&gt;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&#x27;content&#x27;</span>).innerHTML=list;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day20] jsES6語法-展開與其餘參數</title>
      <link href="/2020/10/04/%5BDay20%5D%20jsES6%E8%AA%9E%E6%B3%95-%E5%B1%95%E9%96%8B%E8%88%87%E5%85%B6%E9%A4%98%E5%8F%83%E6%95%B8/"/>
      <url>/2020/10/04/%5BDay20%5D%20jsES6%E8%AA%9E%E6%B3%95-%E5%B1%95%E9%96%8B%E8%88%87%E5%85%B6%E9%A4%98%E5%8F%83%E6%95%B8/</url>
      
        <content type="html"><![CDATA[<h2 id="合併陣列"><a href="#合併陣列" class="headerlink" title="合併陣列"></a>合併陣列</h2><p>一般來說，如果我們要合併陣列可以使用陣列內建的方法 concat 來合併陣列，但是我們也可以透過展開方式來合併陣列，我們可以使用 …arr1 ,…arr2 來將陣列的值取出，並且將他們合併到一個陣列 arr3 中。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr1 = [<span class="string">&#x27;Leo&#x27;</span>,<span class="string">&#x27;Peter&#x27;</span>,<span class="string">&#x27;Amy&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> arr2 = [<span class="string">&#x27;Alex&#x27;</span>,<span class="string">&#x27;Ray&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> arr3 = arr1.concat(arr2);</span><br><span class="line"><span class="built_in">console</span>.log(arr3);</span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr1 = [<span class="string">&#x27;Leo&#x27;</span>,<span class="string">&#x27;Peter&#x27;</span>,<span class="string">&#x27;Amy&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> arr2 = [<span class="string">&#x27;Alex&#x27;</span>,<span class="string">&#x27;Ray&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> arr3 = [...arr1, ...arr2];<span class="comment">//...將陣列的值取出</span></span><br><span class="line"><span class="built_in">console</span>.log(arr3);</span><br></pre></td></tr></table></figure><h2 id="淺複製觀念"><a href="#淺複製觀念" class="headerlink" title="淺複製觀念"></a>淺複製觀念</h2><p>如果我們今天將 arr2 陣列設定成 arr1 陣列，此時當我們將 arr2 陣列的值 push 一個值 Harry，此時我們如果使用 console.log 顯示出陣列，會發現 arr1 也增加了 Harry 的值，原因在於我們是傳 arr1 的參考給 arr2 ，因此當我們更動 arr2 的值，同樣也會修改到 arr1 的值。如果我們想要修改 arr2 的值卻不影響 arr1 ，此時我們將 arr2 設定成 […arr1] ，陣列 arr2 就會設定成從 arr1  取出的值，但是不是傳參考，因此當 arr2 更改時，arr1 不會跟著變動。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr1 = [<span class="string">&#x27;Leo&#x27;</span>,<span class="string">&#x27;Peter&#x27;</span>,<span class="string">&#x27;Amy&#x27;</span>]; </span><br><span class="line"><span class="keyword">let</span> arr2 = arr1;</span><br><span class="line">arr2.push(<span class="string">&#x27;Harry&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(arr1);</span><br><span class="line"><span class="built_in">console</span>.log(arr2);</span><br><span class="line"><span class="comment">// 傳參考</span></span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr1 = [<span class="string">&#x27;Leo&#x27;</span>,<span class="string">&#x27;Peter&#x27;</span>,<span class="string">&#x27;Amy&#x27;</span>]; </span><br><span class="line"><span class="keyword">let</span> arr2 = [...arr1]</span><br><span class="line">arr2.push(<span class="string">&#x27;Harry&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(arr1);</span><br><span class="line"><span class="built_in">console</span>.log(arr2);</span><br><span class="line"><span class="comment">//shallow copy</span></span><br></pre></td></tr></table></figure><h2 id="類陣列"><a href="#類陣列" class="headerlink" title="類陣列"></a>類陣列</h2><p>如果我們使用 document.querySelectorAll(‘li’) 來選取 li 元素，此時當我們用控制台打開 li 時，會發現il 裡面顯示是一個 NodeList ，它是一個類陣列，當我們如果仔細看裡面的東西會發現，少了很多陣列原生的方法，像是 concat。如果我們要將類陣列轉換成陣列，可以使用展開陣列的方式，像是 arrli = […li] 來將累陣列變成陣列。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>a<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>b<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>c<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/all.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> li = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> arrli = [...li] ;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/d0DrQdG.png" alt="https://i.imgur.com/d0DrQdG.png"></p><h2 id="其餘參數"><a href="#其餘參數" class="headerlink" title="其餘參數"></a>其餘參數</h2><p>如果我們不知道要傳入的參數數量有多少，也可以在參數使用…用法，其餘參數用法，那麼它就會自動將參數轉換成陣列的形式。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params">...money</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(money);</span><br><span class="line">&#125;</span><br><span class="line">show(<span class="number">100</span>,<span class="number">400</span>,<span class="number">500</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day19] jsES6語法-使用 let 與 const 宣告變數</title>
      <link href="/2020/10/03/%5BDay19%5D%20jsES6%E8%AA%9E%E6%B3%95-%E4%BD%BF%E7%94%A8%20let%20%E8%88%87%20const%20%E5%AE%A3%E5%91%8A%E8%AE%8A%E6%95%B8/"/>
      <url>/2020/10/03/%5BDay19%5D%20jsES6%E8%AA%9E%E6%B3%95-%E4%BD%BF%E7%94%A8%20let%20%E8%88%87%20const%20%E5%AE%A3%E5%91%8A%E8%AE%8A%E6%95%B8/</url>
      
        <content type="html"><![CDATA[<h2 id="Hoisting-差異"><a href="#Hoisting-差異" class="headerlink" title="Hoisting 差異"></a>Hoisting 差異</h2><p>所先我們先複習一下 <code>Hoisting</code> ，就是變數和函數的宣告，會在編譯階段就被放進記憶體。今天如我們分別使用 <code>let</code> 和 <code>var</code> 宣告變數，並且在宣告前使用 <code>consolo</code> 顯示出變數，會發現使用 <code>let</code> 宣告的變數是 <code>not defined</code>，代表還沒有配置記憶體空間給這個變數，而使用 <code>var</code> 宣告的則是 <code>undefined</code> ，代表已經宣告記憶體給這個變數。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(name1) <span class="comment">//not defined</span></span><br><span class="line"><span class="built_in">console</span>.log(name2) <span class="comment">//undefined</span></span><br><span class="line"><span class="keyword">let</span> name1 = <span class="string">&#x27;Leo&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> name2 = <span class="string">&#x27;Peter&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="作用域差異"><a href="#作用域差異" class="headerlink" title="作用域差異"></a>作用域差異</h2><p><code>var</code> 作用域是 <code>function scope</code>，<code>let</code> 作用域是 <code>block</code>。因此只要是我們在函數裡面用  <code>var</code> 宣告的變數都會有影響，像是如果我們在 <code>show1</code> 函數中使用 <code>var</code> 宣告兩次 <code>name</code> ，<code>if</code> 條件式裡面用 <code>var</code> 宣告的 <code>name</code> 也會影響原本使用 <code>var</code> 宣告的變數 <code>name</code>，因此 <code>name</code> 被改成了 <code>Peter</code>。但是如果我們是使用 <code>let</code> 宣告變數，像是 <code>show2</code> 函數，<code>if</code> 裡面使用 <code>let</code> 宣告的變數因為只在那個 <code>if</code> 條件的區塊(block) 產生作用，所以不會影響原本宣告的 <code>name</code> 變數，變數 <code>name</code> 還是 <code>Leo</code>。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> name = <span class="string">&#x27;Leo&#x27;</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> name = <span class="string">&#x27;Peter&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(name);</span><br><span class="line">&#125; <span class="comment">// 顯示 peter</span></span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> name = <span class="string">&#x27;Leo&#x27;</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> name = <span class="string">&#x27;Peter&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(name);</span><br><span class="line">&#125; <span class="comment">// 顯示 Leo</span></span><br></pre></td></tr></table></figure><h2 id="const-與物件用法"><a href="#const-與物件用法" class="headerlink" title="const 與物件用法"></a>const 與物件用法</h2><p>當我們使用 <code>const</code> 宣告變數後，此時這個變數就不能再次宣告，否則會出錯。但是如果我們使用 <code>const</code> 來宣告物件，我們可以修改 <code>const</code> 物件內的屬性值，而不會出錯。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;Leo&#x27;</span>;</span><br><span class="line">name = <span class="string">&#x27;Peter&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> family = &#123;</span><br><span class="line">    mom:<span class="string">&#x27;小美&#x27;</span>,</span><br><span class="line">    father:<span class="string">&#x27;小明&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line">family.father = <span class="string">&#x27;爸爸&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(family.father)</span><br><span class="line"><span class="comment">//物件傳參考</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day18] 表單使用進階</title>
      <link href="/2020/10/02/%5BDay18%5D%20%E8%A1%A8%E5%96%AE%E4%BD%BF%E7%94%A8%E9%80%B2%E9%9A%8E/"/>
      <url>/2020/10/02/%5BDay18%5D%20%E8%A1%A8%E5%96%AE%E4%BD%BF%E7%94%A8%E9%80%B2%E9%9A%8E/</url>
      
        <content type="html"><![CDATA[<h2 id="使用-v-for-動態產生選項"><a href="#使用-v-for-動態產生選項" class="headerlink" title="使用 v-for 動態產生選項"></a>使用 v-for 動態產生選項</h2><p>如果我們今天要將陣列的資料放進 <code>select</code> 單選下拉式選單中，可以在 <code>option</code> 標籤中使用 <code>v-for</code>，將 <code>item</code> 帶入到選項中，記得要在 <code>value</code> 前面加上 <code>:</code> ，因為 <code>value</code> 的值是隨著陣列的內容而不同是一種動態的屬性，最後我們使用 <code>v-model</code> 將 <code>select</code> 和資料  <code>selected</code>  綁定，當我們點擊選項後，選項的 <code>value</code> 就會變成 <code>selected</code> 的值。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">&quot;select&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">disabled</span>&gt;</span>請選擇<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">v-for</span>=<span class="string">&quot;item in dataArray&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;item&quot;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            dataArray:[<span class="string">&#x27;Leo&#x27;</span>,<span class="string">&#x27;Perter&#x27;</span>,<span class="string">&#x27;Harry&#x27;</span>],</span><br><span class="line">                        selected:<span class="string">&#x27;&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="替換-checkbox-值"><a href="#替換-checkbox-值" class="headerlink" title="替換 checkbox 值"></a>替換 checkbox 值</h2><p>先前我們有提到，若將 <code>checkbox</code> 綁定在資料上，當我們點擊 <code>checkbox</code> 欄位，此時綁定的資料會出現 <code>true</code> 或者 <code>false</code>，如果我們想要將 <code>true</code> 或 <code>false</code> 替換成自己想要的值，可以使用 <code>true-value ＝&#39;我們設定的值&#39;</code>，<code>false-value ＝&#39;我們設定的值&#39;</code>，比如果們將 <code>true</code> 設定成男生，<code>false</code> 設定成女生，之後點擊 <code>checkbox</code> 後，<code>checkbox</code> 綁定的資料 <code>gender</code> 就會呈現男生或女生。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&#x27;checkbox&#x27;</span> <span class="attr">true-value</span>=<span class="string">&#x27;男生&#x27;</span> <span class="attr">false-value</span>=<span class="string">&#x27;女生&#x27;</span>&gt;</span>&#123;&#123;gender&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            gender:<span class="string">&#x27;男生&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="v-model-lazy"><a href="#v-model-lazy" class="headerlink" title="v-model.lazy"></a>v-model.lazy</h2><p>先前我們提到，如果我們使用 <code>v-model</code> 將 <code>input</code> 輸入還有資料 <code>text</code> 綁定，此時當我們在 <code>input</code> 輸入欄位內輸入值，<code>&#123;&#123;text&#125;&#125;</code> 畫面沒有馬上跟著改變，而是等到當我們輸入結束，跳出輸入框時，畫面才跟著變動，原因就在於我們在 <code>v-model</code> 加上 <code>lazy</code>，來達成這個效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model.lazy</span>=<span class="string">&#x27;text&#x27;</span>&gt;</span> &#123;&#123;text&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            text:<span class="string">&#x27;&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="v-model-number"><a href="#v-model-number" class="headerlink" title="v-model.number"></a>v-model.number</h2><p>如果我們使用 <code>typeof</code> 查看 <code>input</code> 綁定的資料 <code>text</code>，可以發現它是字串的形式，如果我們想要將字串的形式改成數字，可以再 <code>v-model</code> 後面加上 <code>.number</code>，此時我們會發現 <code>text</code> 的 <code>typeof</code> 變成是 <code>number</code>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model.number</span>=<span class="string">&#x27;text&#x27;</span>&gt;</span> &#123;&#123;typeof(text)&#125;&#125;&#123;&#123;text&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            text:<span class="string">&#x27;&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="v-model-trim"><a href="#v-model-trim" class="headerlink" title="v-model.trim"></a>v-model.trim</h2><p>如果我們要 <code>input</code> 輸入欄位的開頭字尾的空白給刪除，可以再 <code>v-model</code> 後面加上 <code>.trim</code>，此時就算我們在輸入欄位的開頭還是結尾加上空白鍵，最後在畫面呈現時都會省略。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model.trim</span>=<span class="string">&#x27;text&#x27;</span>&gt;</span>&#123;&#123;text&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            text:<span class="string">&#x27;&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day17] 條件式 (v-if) 進階</title>
      <link href="/2020/10/01/%5BDay17%5D%20%E6%A2%9D%E4%BB%B6%E5%BC%8F%20(v-if)%20%E9%80%B2%E9%9A%8E/"/>
      <url>/2020/10/01/%5BDay17%5D%20%E6%A2%9D%E4%BB%B6%E5%BC%8F%20(v-if)%20%E9%80%B2%E9%9A%8E/</url>
      
        <content type="html"><![CDATA[<h2 id="否定用法"><a href="#否定用法" class="headerlink" title="!否定用法"></a>!否定用法</h2><p>我們在 <code>v-if</code> 條件直接使用否定<code>！</code>用法，將 <code>true</code> 的條件式改成 <code>false</code>，當條件等於 <code>true</code> 就會顯示出成功的 <code>div</code> 區塊，反之則會顯示失敗的 <code>div</code> 區塊。我們也可以寫一個 <code>checkbox</code> 綁定 <code>isSucceed</code> 來更改 <code>true</code> 和 <code>false</code>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;isSucceed&quot;</span>&gt;</span>成功<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;!isSucceed&quot;</span>&gt;</span>失敗<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;isSucceed&quot;</span>&gt;</span>更換</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            isSucceed:<span class="literal">false</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="v-else"><a href="#v-else" class="headerlink" title="v-else"></a>v-else</h2><p>我們也可以使用 <code>v-else</code>， 當 <code>v-if</code> 的條件不成立時，就會自動執行 <code>v-else</code> 的內容，而不用設定條件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;isSucceed&quot;</span>&gt;</span>成功<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span>失敗<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;isSucceed&quot;</span>&gt;</span>更換</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            isSucceed:<span class="literal">false</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="v-if-v-if-else-v-else"><a href="#v-if-v-if-else-v-else" class="headerlink" title="v-if,v-if-else,v-else"></a>v-if,v-if-else,v-else</h2><p>如果我們遇到一個三選一的條件，或是需要製作分頁，就可以使用 <code>v-if，v-if-else，v-else</code> 來製作分頁。我們先宣告資料變數 <code>page</code> 來存放切換的分頁代表。並且設定三個按鈕 <code>abc</code> ，分別將它們綁定點擊事件，點擊後會改變 <code>page</code> 資料的值為指定分頁代表。最後我們設定三個 <code>div</code> 區塊 <code>abc</code>，當 <code>page == a</code> 代表條件成立，會出現 <code>a</code> 區塊，點按鈕 <code>b</code> ，條件式 <code>b</code> 會成立，會出現 <code>b</code> 區塊，點按鈕 <code>c</code>，條件式 <code>c</code> 會成立，會出現 <code>c</code> 區塊。 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;page==&#x27;a&#x27;&quot;</span>&gt;</span>a<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;page==&#x27;b&#x27;&quot;</span>&gt;</span>b<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>=<span class="string">&quot;page==&#x27;c&#x27;&quot;</span>&gt;</span>c<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;a&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;page=&#x27;a&#x27;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;b&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;page=&#x27;b&#x27;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;c&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;page=&#x27;c&#x27;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            page:<span class="string">&#x27;a&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h2><p>其實 <code>v-show</code> 和 <code>v-if</code> 的功能一樣，差別在於 <code>v-show</code> 是將條件式不成立的 <code>div</code> 區塊使用 <code>dispaly:none</code> 來隱藏，而 <code>v-if</code> 則是直接不會出現條件式不成立的區塊。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-show</span>=<span class="string">&quot;isSucceed&quot;</span>&gt;</span>成功<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-show</span>=<span class="string">&quot;!isSucceed&quot;</span>&gt;</span>失敗<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;isSucceed&quot;</span>&gt;</span>成功<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;!isSucceed&quot;</span>&gt;</span>失敗<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            isSucceed:<span class="literal">false</span>,</span><br><span class="line">            page:<span class="string">&#x27;a&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/n98b0GE.png" alt="https://i.imgur.com/n98b0GE.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day16] 頁面操作 (v-on) 進階</title>
      <link href="/2020/09/30/%5BDay16%5D%20%E9%A0%81%E9%9D%A2%E6%93%8D%E4%BD%9C%20(v-on)%20%E9%80%B2%E9%9A%8E/"/>
      <url>/2020/09/30/%5BDay16%5D%20%E9%A0%81%E9%9D%A2%E6%93%8D%E4%BD%9C%20(v-on)%20%E9%80%B2%E9%9A%8E/</url>
      
        <content type="html"><![CDATA[<h2 id="帶入參數"><a href="#帶入參數" class="headerlink" title="帶入參數"></a>帶入參數</h2><p>我們設定一個 <code>dataArr</code> 陣列，裡面存放 <code>name</code> 還有 <code>money</code> 組成的物件，我們宣告一個 <code>save</code> 方法，傳入一個物件 <code>item</code> 把當成這個方法參數，並將這個方法用 <code>＠click</code> 綁定在 <code>button</code> 的點擊事件。最後我們使用 <code>v-for</code> 存取 <code>dataArr</code> 的資料 ，將 <code>dataArr</code> 的值傳入 <code>item</code> ，此時當我們點擊按鈕後，<code>dataArr</code> 就會用 <code>item</code> 物件的方式傳入 <code>save</code> 方法中，執行將物件的 <code>money</code> 加 500。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in dataArr&quot;</span>&gt;</span></span><br><span class="line">                &#123;&#123;item.name&#125;&#125;有&#123;&#123;item.money&#125;&#125;$ <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;儲值&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;save(item)&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            dataArr:[</span><br><span class="line">                &#123;</span><br><span class="line">                    name: <span class="string">&#x27;Leo&#x27;</span>,</span><br><span class="line">                    money:<span class="number">200</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    name: <span class="string">&#x27;Peter&#x27;</span>,</span><br><span class="line">                    money:<span class="number">600</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    name: <span class="string">&#x27;Amy&#x27;</span>,</span><br><span class="line">                    money:<span class="number">500</span></span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            save:<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">                item.money+=<span class="number">500</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/eGbsolF.png" alt="https://i.imgur.com/eGbsolF.png"></p><h2 id="事件修飾符"><a href="#事件修飾符" class="headerlink" title="事件修飾符"></a>事件修飾符</h2><p>如果我們設定三個 <code>div</code> 區塊，一個 <code>div</code> 區塊包著另一個 <code>div</code> 區塊，並且在 <code>div</code> 區塊內設定點擊方法 <code>show</code>，此方法會秀出 <code>div</code> 區塊的名稱，此時當我點擊最裡面 <code>div</code> 區塊元素時可以發現，我們明明只有點擊到最內部的 <code>div</code> 區塊，<code>console</code> 卻顯示從 <code>box3</code> 到 <code>box1</code>，這是因為我們在觸發動元素時是由內從外觸發。所以我們點擊內部 <code>div</code> 也會觸發到外部的 <code>div</code> 區塊。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width:100px;height:100px;background-color: red;&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;show(&#x27;box1&#x27;)&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width:50px;height:50px;background-color:black;&quot;</span>@<span class="attr">click</span>=<span class="string">&quot;show(&#x27;box2&#x27;)&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width:25px;height:25px;background-color:green;&quot;</span>@<span class="attr">click</span>=<span class="string">&quot;show(&#x27;box3&#x27;)&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            show: <span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(item);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/lHW0BnC.png" alt="https://i.imgur.com/lHW0BnC.png"></p><h3 id="stop"><a href="#stop" class="headerlink" title=".stop"></a>.stop</h3><p>若我們在 <code>@click</code> 加上 <code>.stop</code> 就可以讓點擊事件不向外擴散。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width:100px;height:100px;background-color: red;&quot;</span>@<span class="attr">click.stop</span>=<span class="string">&quot;show(&#x27;box1&#x27;)&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width:50px;height:50px;background-color:black;&quot;</span>@<span class="attr">click.stop</span>=<span class="string">&quot;show(&#x27;box2&#x27;)&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width:25px;height:25px;background-color:green;&quot;</span>@<span class="attr">click.stop</span>=<span class="string">&quot;show(&#x27;box3&#x27;)&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            show: <span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(item);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="capture"><a href="#capture" class="headerlink" title=".capture"></a>.capture</h3><p>如果我們在 <code>@click</code> 加上 <code>.capture</code> 就可以讓點擊事件變成由外而內觸發，當我們點擊時顯示 <code>box1 → box2</code> </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width:100px;height:100px;background-color: red;&quot;</span>@<span class="attr">click.capture</span>=<span class="string">&quot;show(&#x27;box1&#x27;)&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width:50px;height:50px;background-color:black;&quot;</span>@<span class="attr">click.capture</span>=<span class="string">&quot;show(&#x27;box2&#x27;)&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width:25px;height:25px;background-color:green;&quot;</span>@<span class="attr">click.capture</span>=<span class="string">&quot;show(&#x27;box3&#x27;)&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            show: <span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(item);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="self"><a href="#self" class="headerlink" title=".self"></a>.self</h3><p><code>@click</code> 加上 <code>.self</code>，就只會觸發本身事件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width:100px;height:100px;background-color: red;&quot;</span>@<span class="attr">click.self</span>=<span class="string">&quot;show(&#x27;box1&#x27;)&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width:50px;height:50px;background-color:black;&quot;</span>@<span class="attr">click.self</span>=<span class="string">&quot;show(&#x27;box2&#x27;)&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width:25px;height:25px;background-color:green;&quot;</span>@<span class="attr">click.self</span>=<span class="string">&quot;show(&#x27;box3&#x27;)&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            show: <span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(item);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day15] 元件概念</title>
      <link href="/2020/09/29/%5BDay15%5D%20%E5%85%83%E4%BB%B6%E6%A6%82%E5%BF%B5/"/>
      <url>/2020/09/29/%5BDay15%5D%20%E5%85%83%E4%BB%B6%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<p>我們今天在 Vue 應用中宣告一個資料 <code>counter</code>，並且設定一個按鈕綁定點擊事件，此時當我們點擊按鈕時，會發現按鈕上的 <code>counter</code> 變數值加一，我們將相同按鈕程式碼複製再產生一個相同的按鈕。此點會發現當我們點擊按鈕時，兩顆按鈕的資料都會加一，如果我們要將按鈕的資料分開，可能的做法是將不同的按鈕綁定不同的變數，但這樣就變成我們要多設定一個變數，如果此時按鈕一多，那麼要設定新的變數也會變多。此時我們可以使用 Vue 元件的做法來解決這個問題。透過元件，我們可以將程式給模組化重複利用。接下來說明元件的使用方式，首先我們必須再 Vue 應用程式前面宣告一個 <code>Vue.component</code> ，() 內第一個參數我們放的是元件的名稱，像是範例程式將元件名稱設定成 <code>&#39;counter&#39;</code> ，接下來第二個參數就很像是我們宣告一個 Vue app 的樣子，裡面是一個物件形式，也有 <code>data</code> 資料不過和一般 Vue 應用宣告的方式不太一樣，我們必須以物件的形式透過 <code>function return</code> 來傳遞資料，像是範例程式我們將資料 <code>counter</code> 包裝物件透過函數來回傳。接下來我們使用 <code>template</code> 的方式來宣告元件，有很多可以產生元件的方法，這邊我們先用 <code>template</code> 為例子，<code>template</code> 裡面我們必須以字串的方式來放入我們想在畫面呈現的程式碼，就很像是 js 的 <code>innerHTML</code> ，然後這邊我們使用一個 js ES6 <code>模版字符串</code>的語法，將我們要呈現在畫面上的 html 程式語法直接打在<code>模版字符串</code>裡面，透過此方法我們可以省略串接字串的加號，更容易撰寫程式，因此我們複製上一個按鈕得程式碼將它放進中，最後我們透過元件<code>&lt;counter&gt;&lt;/counter&gt;</code>來產生兩格按鈕，當我們點擊兩顆按鈕時，可以明顯發現按鈕內的資料不會都加一，達到了資料的獨立。透過 Vue 開發者工具，我們也可以看到再在<code>root 元件</code>裡面有兩個 <code>counter</code> 元件，點進去 <code>counter</code> 元件發現他們的資料確實都是獨立的。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;app&#x27;</span>&gt;</span></span><br><span class="line">        一般寫法:</span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;counter+=1&quot;</span>&gt;</span>&#123;&#123;counter&#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;counter+=1&quot;</span>&gt;</span>&#123;&#123;counter&#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        元件寫法：</span><br><span class="line">        <span class="tag">&lt;<span class="name">counter</span>&gt;</span><span class="tag">&lt;/<span class="name">counter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">counter</span>&gt;</span><span class="tag">&lt;/<span class="name">counter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    Vue.component(<span class="string">&#x27;counter&#x27;</span>,&#123;</span><br><span class="line">        data:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span>&#123;</span><br><span class="line">                counter: <span class="number">0</span></span><br><span class="line">            &#125; </span><br><span class="line">        &#125;,</span><br><span class="line">        template:<span class="string">`</span></span><br><span class="line"><span class="string">        &lt;button @click=&quot;counter+=1&quot;&gt;&#123;&#123;counter&#125;&#125;&lt;/button&gt;</span></span><br><span class="line"><span class="string">        `</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            counter: <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/Kshan6S.png" alt="https://i.imgur.com/Kshan6S.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day14] 迴圈 (v-for) 進階(2)</title>
      <link href="/2020/09/28/%5BDay14%5D%20%E8%BF%B4%E5%9C%88%20(v-for)%20%E9%80%B2%E9%9A%8E(2)/"/>
      <url>/2020/09/28/%5BDay14%5D%20%E8%BF%B4%E5%9C%88%20(v-for)%20%E9%80%B2%E9%9A%8E(2)/</url>
      
        <content type="html"><![CDATA[<h2 id="不能運行的狀況"><a href="#不能運行的狀況" class="headerlink" title="不能運行的狀況"></a>不能運行的狀況</h2><h3 id="設定陣列長度為０"><a href="#設定陣列長度為０" class="headerlink" title="設定陣列長度為０"></a>設定陣列長度為０</h3><p>在 js 中我們可以將某個陣列長度設定為０來將這個陣列的值消失，如範例的 <code>dataArray2</code> ，但是在 Vue 中這種寫法是不行執行的，我們今天透過一個 <code>noWork</code> 方法去將陣列的長度設定為 0，並且在 <code>console</code> 上印出我們修改的陣列，會發現雖然最後陣列裡面的元素變成 0 ，但是畫面上 <code>li</code> 標籤所渲染的陣列資料卻沒有改變。 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;app&#x27;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&#x27;item in dataArray1&#x27;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;noWork&#x27;</span>&gt;</span>更改陣列長度<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            dataArray1:[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            noWork:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.dataArray1.length = <span class="number">0</span>;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.dataArray1.length);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">var</span> dataArray2 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">    dataArray2.length = <span class="number">0</span>;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><p><img src="https://i.imgur.com/U86Ei35.png" alt="https://i.imgur.com/U86Ei35.png"></p><p><img src="https://i.imgur.com/x7us5RQ.png"></p><h3 id="透過索引值新增陣列值"><a href="#透過索引值新增陣列值" class="headerlink" title="透過索引值新增陣列值"></a>透過索引值新增陣列值</h3><p>在 js 中我們可以透過指定陣列的索引值來新增或修改我們想要值，但是這個方法在 Vue 中無法運行，當我們使用一個方法 <code>noWork</code> 在索引值4的地方新增值5，並將陣列值顯示在<code>consolo</code>上，此時我們會發現，雖然陣列的確多了一筆值為5的資料，但是畫面上的 <code>li 標籤</code>卻沒有渲染出5出來。如果我們想要在 Vue 中透過指定索引值的方式來修改陣列值的話，我們可以使用 Vue 內建的 <code>set</code> 方法來達成。<code>set</code> 方法裡面有三個參數值，<code>target</code> 代表是我們要修改的目標陣列， <code>index</code> 代表目標陣列裡面我們要修改或是新增的索引值，最後 <code>value</code> 則是我們指定的值。透過這個方法我們可以更新陣列資料並且讓畫面也渲染出新的陣列資料。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;app&#x27;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&#x27;item in dataArray1&#x27;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;noWork&#x27;</span>&gt;</span>插值方法1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;set&#x27;</span>&gt;</span>插入方法2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            dataArray1:[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            noWork:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.dataArray1[<span class="number">4</span>]=<span class="number">5</span>;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.dataArray1);</span><br><span class="line">            &#125;,</span><br><span class="line">            set:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                Vue.set(<span class="built_in">this</span>.dataArray1,<span class="number">4</span>,<span class="number">5</span>);<span class="comment">//set(target,index,value)</span></span><br><span class="line">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.dataArray1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/Yyzwclj.png" alt="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/7b1cc8a9-d77d-405b-90e5-2039b1ef282a/Untitled.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day13] 迴圈 (v-for) 進階(1)</title>
      <link href="/2020/09/27/%5BDay13%5D%20%E8%BF%B4%E5%9C%88%20(v-for)%20%E9%80%B2%E9%9A%8E(1)/"/>
      <url>/2020/09/27/%5BDay13%5D%20%E8%BF%B4%E5%9C%88%20(v-for)%20%E9%80%B2%E9%9A%8E(1)/</url>
      
        <content type="html"><![CDATA[<h2 id="物件與陣列的索引"><a href="#物件與陣列的索引" class="headerlink" title="物件與陣列的索引"></a>物件與陣列的索引</h2><p>我們可以用陣列或者物件的形式來存放資料，並且透過 <code>v-for</code> 的方式將資料全部顯示出來，其中我們會使用 <code>index</code> 來存放資料的索引值，而物件和陣列最大的差別就在於索引值部分，陣列是用數字由 0 依序表示索引，而物件則用物件內部指定名稱表示索引。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">app</span>&gt;</span></span><br><span class="line">        陣列資料</span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in dataArray&quot;</span>&gt;</span>&#123;&#123;index&#125;&#125;:&#123;&#123;item.name&#125;&#125;&#123;&#123;item.age&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        物件資料</span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in dataObject&quot;</span>&gt;</span>&#123;&#123;index&#125;&#125;:&#123;&#123;item.name&#125;&#125;&#123;&#123;item.age&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            dataArray: [</span><br><span class="line">                &#123;</span><br><span class="line"><span class="javascript">                    name: <span class="string">&#x27;Leo&#x27;</span>,</span></span><br><span class="line">                    age:23</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line"><span class="javascript">                    name: <span class="string">&#x27;Marry&#x27;</span>,</span></span><br><span class="line">                    age:30</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line"><span class="javascript">                    name: <span class="string">&#x27;Peter&#x27;</span>,</span></span><br><span class="line">                    age:34</span><br><span class="line">                &#125;,</span><br><span class="line">            ],</span><br><span class="line">            dataObject: &#123;</span><br><span class="line">                one:&#123;</span><br><span class="line">                    age:23</span><br><span class="line">                &#125;,</span><br><span class="line">                two:&#123;</span><br><span class="line">                    age:30</span><br><span class="line">                &#125;,</span><br><span class="line">                three:&#123;</span><br><span class="line">                    age:34</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="key-值應用"><a href="#key-值應用" class="headerlink" title="key 值應用"></a>key 值應用</h2><p>我們如果使用 <code>v-for</code> 來顯示陣列資料，用 <code>li</code> 當成顯示方式，並且在每個 <code>li</code> 中間加入輸入欄位，此時我們依照資料 <code>age</code> 的大小，分別在輸入欄位輸入數字1~3，1 表示 <code>age</code> 最小的，3 表示最大的。當我們在使用一個反轉陣列的方法時，會發現原本輸入數字沒有跟著資料欄位移動。這是因為 Vue 為了確保效能，會盡量避免重複渲染已經渲染好的元素，所以只有部分元素重新渲染。這時我們使用到  <code>key</code> 就可以使元素重新渲染，記得 <code>key</code> 值要找都不一樣，確保可識別唯一性，比如像是 <code>age</code> 資料就都是不一樣的，當我們使用 <code>key</code> 後在使用反轉陣列方法時，就可以發現輸入的數字也會隨著資料反轉。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;app&#x27;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in dataArray&quot;</span> &gt;</span>&#123;&#123;item.name&#125;&#125;&#123;&#123;item.age&#125;&#125; <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,key) in dataArray&quot;</span> <span class="attr">:key</span>=<span class="string">&#x27;item.age&#x27;</span>&gt;</span>&#123;&#123;item.name&#125;&#125;&#123;&#123;item.age&#125;&#125; <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;reverse(dataArray)&quot;</span>&gt;</span>反轉陣列<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            dataArray: [</span><br><span class="line">                &#123;</span><br><span class="line">                    name: <span class="string">&#x27;Leo&#x27;</span>,</span><br><span class="line">                    age:<span class="number">23</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    name: <span class="string">&#x27;Marry&#x27;</span>,</span><br><span class="line">                    age:<span class="number">30</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    name: <span class="string">&#x27;Peter&#x27;</span>,</span><br><span class="line">                    age:<span class="number">34</span></span><br><span class="line">                &#125;,</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            reverse:<span class="function"><span class="keyword">function</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">                arr.reverse();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/eq42ws9.png" alt="https://i.imgur.com/eq42ws9.png"></p><h2 id="filter-用法"><a href="#filter-用法" class="headerlink" title="filter 用法"></a>filter 用法</h2><p>有時候我們要篩選陣列裡面的資料，這時候就可以用 <code>js</code> 內建處理陣列的方法 <code>filter()</code> 來幫助我們過濾資料，而 <code>filter()</code> 的特性是它會 <code>return</code> 後方條件為 <code>true</code> 的物件。範例程式是用一個 <code>dataArray</code> 陣列來存放我們的原始資料，用 <code>search</code> 來代表我們要找尋的資料，並用 <code>v-model</code> 將它的值和 <code>input</code> 輸入欄位綁在一起，而 <code>newArr</code> 陣列則是來放我們透過 <code>fliter</code> 過濾後的資料。最後我們寫一個 <code>fil</code> 方法，方法先宣告變數名稱 <code>vm</code> 為 <code>this</code>，接下來我們就可以透過 <code>vm</code> 來存取 Vue 應用中的資料，最後當 <code>filter</code> 函數 <code>return</code> 後面的條件式是 <code>true</code> ，也就是 <code>search</code> 搜尋的文字和原本資料(此時用 item 代表)的 <code>name</code> 一樣時( <code>match</code> 方法)，陣列中所屬的物件就會傳到 <code>newArr</code> 陣列中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;app&#x27;</span>&gt;</span></span><br><span class="line">        原本資料</span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in dataArray&quot;</span>&gt;</span>&#123;&#123;item.name&#125;&#125;&#123;&#123;item.age&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        過濾資料</span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in newArr&quot;</span>&gt;</span>&#123;&#123;item.name&#125;&#125;&#123;&#123;item.age&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;search&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;fil&quot;</span>&gt;</span>搜尋資料<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            dataArray: [</span><br><span class="line">                &#123;</span><br><span class="line">                    name: <span class="string">&#x27;Leo&#x27;</span>,</span><br><span class="line">                    age:<span class="number">23</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    name: <span class="string">&#x27;Marry&#x27;</span>,</span><br><span class="line">                    age:<span class="number">30</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    name: <span class="string">&#x27;Peter&#x27;</span>,</span><br><span class="line">                    age:<span class="number">34</span></span><br><span class="line">                &#125;,</span><br><span class="line">            ],</span><br><span class="line">            search:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            newArr:[]</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            fil:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> vm = <span class="built_in">this</span>;</span><br><span class="line">                vm.newArr = vm.dataArray.filter(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> vm.search.match(item.name);</span><br><span class="line">                                        <span class="comment">//  寫這樣 return item.name.match(vm.search) 也可以 ;</span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="數字用法"><a href="#數字用法" class="headerlink" title="數字用法"></a>數字用法</h2><p>如果我們使用 <code>v-for</code> <code>in</code> 一個數字並將它綁定在 <code>li</code> 標籤上，<code>li</code> 標籤就會渲染出從1到你指定的數字到畫面上。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;app&#x27;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&#x27;item in 10&#x27;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day12] 動態切換 ClassName</title>
      <link href="/2020/09/26/%5BDay12%5D%20%E5%8B%95%E6%85%8B%E5%88%87%E6%8F%9B%20ClassName/"/>
      <url>/2020/09/26/%5BDay12%5D%20%E5%8B%95%E6%85%8B%E5%88%87%E6%8F%9B%20ClassName/</url>
      
        <content type="html"><![CDATA[<h2 id="物件方式"><a href="#物件方式" class="headerlink" title="物件方式"></a>物件方式</h2><p>先前提到我們可以使用 <code>v-bind</code> 來動態綁定會變化的元素屬性，比如用 <code>:class = &quot;&#123;&#39;套用類別名稱&#39;:判斷值&#125;&quot;</code>，以物件方式加入類別樣式，在這裡我們有另一種寫法，就是直接將 <code>class</code> 裡面所存放的物件，直接存放在 Vue 資料中，像是下面範例的 <code>classObject</code>，這樣的好處是可直接透過物件的方式來修改類別樣式的判斷式，而不用在另外用資料來存判斷式的值，像是 <code>isColorRed</code> 或 <code>isTextBold</code> 就可以省掉。我們用 <code>v-on</code> 在 <code>button</code> 加上 <code>click 事件</code>，觸發之後可以變更判斷式的值，用<code>！</code>否定語法，將 <code>true</code> 變成 <code>false</code> ，或 <code>false</code> 變成 <code>true</code> 來套用樣式，要注意第二種寫法，如果我們要存取物件時，如果遇到物件內的存取名稱是用<code>-符號</code>連接，我們要改成用<code>[&#39;存取名稱&#39;]</code>才不會顯示錯誤，像是 <code>text-bold</code>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">app</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;&#x27;color&#x27;:isColorRed,&#x27;text-bold&#x27;:isTextBold&#125;&quot;</span>&gt;</span>物件寫法1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;isColorRed=!isColorRed&quot;</span>&gt;</span>變紅<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;isTextBold=!isTextBold&quot;</span>&gt;</span>變粗<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">:class</span>=<span class="string">&quot;classObject&quot;</span>&gt;</span>物件寫法2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;classObject.color=!classObject.color&quot;</span>&gt;</span>變紅<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;classObject[&#x27;text-bold&#x27;]=!classObject[&#x27;text-bold&#x27;]&quot;</span>&gt;</span>變粗<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            isColorRed:<span class="literal">true</span>,</span><br><span class="line">            isTextBold:<span class="literal">true</span>,</span><br><span class="line">            classObject:&#123;</span><br><span class="line">                <span class="string">&#x27;color&#x27;</span>:<span class="literal">true</span>,</span><br><span class="line">                <span class="string">&#x27;text-bold&#x27;</span>:<span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.color</span>&#123;</span><br><span class="line">       <span class="attribute">color</span>:red;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="selector-class">.text-bold</span>&#123;</span><br><span class="line">       <span class="attribute">font-weight</span>: bold;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="陣列方式"><a href="#陣列方式" class="headerlink" title="陣列方式"></a>陣列方式</h2><p>使用物件加入類別的方式，我們已經知道類別的數量一個一個去設定類別的值，如果我們今天不能判斷有多少類別樣式要套用，就得採用陣列的方式 <code>: class = [&#39;類別名稱&#39;,&#39;類別名稱&#39;]</code> 來加入類別樣式，加上前面提到，我們可以用 <code>v-model</code> 將一個陣列資料和 <code>checkbox</code> 輸入綁定，當我們點擊 <code>checkbox</code>  點擊欄位，所設定的 <code>value</code> 就會加入陣列資料中，而我們將類別樣式設定成<code>value</code>，當點擊後 <code>classArray</code> 陣列就會加入此值並且套用此類別樣式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">app</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">:class</span>=<span class="string">&quot;[&#x27;color&#x27;,&#x27;text-bold&#x27;]&quot;</span>&gt;</span>陣列寫法1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">:class</span>=<span class="string">&quot;classArray&quot;</span>&gt;</span>陣列寫法2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;color&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;classArray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;text-bold&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;classArray&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            classArray:[]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.color</span>&#123;</span><br><span class="line">       <span class="attribute">color</span>:red;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="selector-class">.text-bold</span>&#123;</span><br><span class="line">       <span class="attribute">font-weight</span>: bold;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="行內樣式"><a href="#行內樣式" class="headerlink" title="行內樣式"></a>行內樣式</h2><p>我們也可以直接插入 <code>style</code> 樣式屬性，而不使用類別樣式，插入樣式屬性的方式 <code>:style = &#123; 樣式屬性：&quot;樣式的值&quot;&#125;</code>，然後也可以分為物件還有陣列的方式。最後提醒如果我們要使用到的屬性或變數，比如 <code>font-weight</code> 中間有 <code>dash - 符號</code>的名稱，我們如果直接使用它會出錯，必須使用 <code>&#39; &#39;</code> 將名稱包起來，或者是將它改寫成 <code>camelCased (駝峰) 命名</code>，將 <code>dash</code> 刪除並且將 <code>dash</code> 後面變大寫，比如像是 <code>fontＷeight</code>。 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">app</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>行內樣式<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;font-weight:bold;color:red;&quot;</span>&gt;</span>一般插入行內樣式方法<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;fontWeight:&#x27;bold&#x27;,color:&#x27;red&#x27;&#125;&quot;</span>&gt;</span>物件插入行內樣式方法 1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">:style</span>=<span class="string">&quot;classObjects&quot;</span>&gt;</span>物件插入行內樣式方法 2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">:style</span>=<span class="string">&quot;[&#123;fontWeight:&#x27;bold&#x27;&#125;,&#123;color:&#x27;red&#x27;&#125;]&quot;</span>&gt;</span>陣列插入行內樣式方法 1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">:style</span>=<span class="string">&quot;[color,font]&quot;</span>&gt;</span>陣列插入行內樣式方法 2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            classObjects:&#123;</span><br><span class="line">                fontWeight:<span class="string">&#x27;bold&#x27;</span>,</span><br><span class="line">                color:<span class="string">&#x27;red&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            font:&#123;</span><br><span class="line">                fontWeight:<span class="string">&#x27;bold&#x27;</span></span><br><span class="line">                                <span class="comment">//改成 &#x27;font-weight&#x27;:&#x27;bold&#x27;也可以</span></span><br><span class="line">            &#125;,</span><br><span class="line">            color:&#123;</span><br><span class="line">                color:<span class="string">&#x27;red&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="自動加上-Prefix"><a href="#自動加上-Prefix" class="headerlink" title="自動加上 Prefix"></a>自動加上 Prefix</h2><p>有些瀏覽器需要加上前綴字<code>(Prefix)</code> ，使新的 css 語法能在不同排版的瀏覽器中正確顯示。可以透過 <a href="https://caniuse.com/">Can I use</a>  這個服務來查詢哪些 css 語法，在哪些瀏覽器中需要加上前綴字 <code>Prefix</code>。而如果我使用 Vue 的話，Vue 會自動幫我們幫語法的前綴字補上。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day11] 資料綁定細節</title>
      <link href="/2020/09/25/%5BDay11%5D%20%E8%B3%87%E6%96%99%E7%B6%81%E5%AE%9A%E7%B4%B0%E7%AF%80/"/>
      <url>/2020/09/25/%5BDay11%5D%20%E8%B3%87%E6%96%99%E7%B6%81%E5%AE%9A%E7%B4%B0%E7%AF%80/</url>
      
        <content type="html"><![CDATA[<h2 id="單向綁定-v-once"><a href="#單向綁定-v-once" class="headerlink" title="單向綁定 (v-once)"></a>單向綁定 (v-once)</h2><p>   一般來說，如果我們使用 <code>v-text</code> 來綁定資料與畫面，那通常會是雙面綁定，資料和畫面是交互影響的，假設我們只想讓畫面只渲染一次資料後就不再變動，我們可以使用 <code>v-once</code> 語法，如下面程式，當 <code>input</code> 輸入畫面資料 <code>text</code> 改變時，有加 <code>v-once</code> 的 div 區塊不會跟著改變。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">app</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-text</span>=<span class="string">&#x27;text&#x27;</span> <span class="attr">v-once</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-text</span>=<span class="string">&#x27;text&#x27;</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            text:<span class="string">&#x27;hello&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="表達式-Expression"><a href="#表達式-Expression" class="headerlink" title="表達式 (Expression)"></a>表達式 (Expression)</h2><p>js 裡面有很多常見的表達式子，當我們把它寫進 Vue <code>&#123;&#123;&#125;&#125;</code> 中，它會自動幫我們執行並渲染。補充一下，我們除了聽過表達式 (Expression) 之外也聽過陳述式 (Statement)，兩者差異在於，表達式子會回傳值一個值，像是判斷兩個數字的大小，它會回傳給你 <code>true</code> 或 <code>false</code>，兩個數字相加它會回傳給你相加後數值 (好像你和別人表白，他會回應要還是不要)，而陳述式 (Statement) 就只是執行指令沒有回傳值，比如變數宣告或者 <code>while</code> 迴圈等。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">app</span>&gt;</span></span><br><span class="line">        &#123;&#123;number1+number2&#125;&#125;</span><br><span class="line">        &#123;&#123;text1+text2&#125;&#125;</span><br><span class="line">        &#123;&#123;number1+number2&#125;&#125;</span><br><span class="line">        &#123;&#123;text1.split(&#x27;&#x27;).reverse().join(&#x27;&#x27;)&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            number1:<span class="number">1</span>,</span><br><span class="line">            number2:<span class="number">2</span>,</span><br><span class="line">            text1:<span class="string">&#x27;Hello&#x27;</span>,</span><br><span class="line">            text2:<span class="string">&#x27;Vue&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day10] 修飾符與簡寫</title>
      <link href="/2020/09/24/%5BDay10%5D%20%E4%BF%AE%E9%A3%BE%E7%AC%A6%E8%88%87%E7%B0%A1%E5%AF%AB/"/>
      <url>/2020/09/24/%5BDay10%5D%20%E4%BF%AE%E9%A3%BE%E7%AC%A6%E8%88%87%E7%B0%A1%E5%AF%AB/</url>
      
        <content type="html"><![CDATA[<h2 id="事件觀念"><a href="#事件觀念" class="headerlink" title="事件觀念"></a>事件觀念</h2><p>如果我們建立一個函數 <code>show</code> ，並且將 <code>event</code> 當成它的參數，函數執行在 <code>console</code> 印出 <code>event</code> 參數是什麼，此時我們透過 <code>v-on</code> 將點擊事件還有 <code>show</code> 函數綁在一起，在不傳入任何值給 <code>show</code> 當參數的狀況下，當我們點擊 <code>click</code> ，此時 <code>console</code> 會顯示出 <code>ＭouseEvent</code> ，這就是當我們滑鼠點擊所觸發的 <code>click</code> 滑鼠事件，其他比較常見的還有 <code>keyup</code> 按鍵事件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">app</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.google.com/?hl=zh_tw&quot;</span> <span class="attr">v-on:click</span>=<span class="string">&#x27;show&#x27;</span>&gt;</span>點擊<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            show:<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(event)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><p><img src="https://i.imgur.com/KD3OJAo.png" alt="https://i.imgur.com/KD3OJAo.png"></p><h2 id="修飾符"><a href="#修飾符" class="headerlink" title="修飾符"></a>修飾符</h2><p>前面提到，如果當我們點擊後觸發滑鼠事件，此時 <code>a</code> 標籤的預設功能就會啟動，我們會連結到 <code>href</code>的網址上，如果我們想要點擊 <code>a</code> 標籤卻沒有啟動 <code>a</code> 標籤的預設功能，使 <code>a</code> 標籤不會連結到其他網址，我們可以在 <code>cl2</code> 方法中，將 <code>e</code> 事件參數設定 <code>preventDefault()</code>，他就會將 <code>a</code> 標籤 <code>DOM</code> 本身就擁有連結的功能給消失。而 Vue 中提供了<code>修飾符</code>的用法，當我們使用 <code>v-on</code> 綁定 <code>click</code> 事件時，加上<code>.prevent</code>，此時 <code>a</code> 標籤預設連結的功能就會消失。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">app</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.google.com/?hl=zh_tw&quot;</span> <span class="attr">v-on:click.prevent</span>=<span class="string">&#x27;cl1&#x27;</span>&gt;</span>點擊１<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.google.com/?hl=zh_tw&quot;</span> <span class="attr">v-on:click</span>=<span class="string">&#x27;cl2&#x27;</span>&gt;</span>點擊２<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            cl1:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;點擊成功&#x27;</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">                        cl2:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">                                e.preventDefault()</span><br><span class="line">                  <span class="built_in">console</span>.log(<span class="string">&#x27;點擊成功&#x27;</span>)</span><br><span class="line">              &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="簡寫"><a href="#簡寫" class="headerlink" title="簡寫"></a>簡寫</h2><p>先前提到，如果我們要綁定一個觸發事件，可以使用 <code>v-on:</code> ，也可以直接簡寫成<code>＠</code>，結果都會是一樣的。還有我們使用動態綁定屬性的 <code>v-bind</code> 指定，也可以直接簡寫 <code>:</code> 符號，增加開發效率。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">app</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.google.com/?hl=zh_tw&quot;</span> <span class="attr">v-on:click.prevent</span>=<span class="string">&#x27;cl1&#x27;</span>&gt;</span>v-on:<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.google.com/?hl=zh_tw&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&#x27;cl1&#x27;</span>&gt;</span>@<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">&quot;url&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;url&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            url:<span class="string">&#x27;http://img.ewebweb.com/uploads/20190614/14/1560492017-TUpfOhVQro.jpg&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            cl1:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;點擊成功&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day9] 操作頁面行為(v-on)</title>
      <link href="/2020/09/23/%5BDay9%5D%20%E6%93%8D%E4%BD%9C%E9%A0%81%E9%9D%A2%E8%A1%8C%E7%82%BA(v-on)/"/>
      <url>/2020/09/23/%5BDay9%5D%20%E6%93%8D%E4%BD%9C%E9%A0%81%E9%9D%A2%E8%A1%8C%E7%82%BA(v-on)/</url>
      
        <content type="html"><![CDATA[<h2 id="方法綁定按鈕"><a href="#方法綁定按鈕" class="headerlink" title="方法綁定按鈕"></a>方法綁定按鈕</h2><p>假如我們要在 Vue 中使用自定義的方法，此時我們可以在宣告好的 Vue 物件底下加上 <code>methods</code>，而 <code>methods</code> 裡面就可以用物件的方式宣告自定義的方法，如程式範例的 <code>reverse</code> 方法，並且用 Vue 的 <code>v-on</code> 指令將 <code>button</code> 還有 <code>reverse</code> 方法綁定，此時當我們點擊 <code>button</code> 就可以看到 <code>console</code> 跳出 <code>test</code> 文字，代表按鈕和方法有綁定成功。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;text&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;reverse&quot;</span>&gt;</span>反轉字串<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            text:<span class="string">&#x27;1234&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            reverse:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="反轉字串邏輯"><a href="#反轉字串邏輯" class="headerlink" title="反轉字串邏輯"></a>反轉字串邏輯</h2><p><img src="https://i.imgur.com/4FlP8b1.png" alt="https://i.imgur.com/4FlP8b1.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;text&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;reverse&quot;</span>&gt;</span>反轉字串<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            text:<span class="string">&#x27;1234&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            reverse:<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.text=<span class="built_in">this</span>.text.split(<span class="string">&#x27;&#x27;</span>).reverse().join(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>接下來我們來實作一個反轉字串的方法，我們會使用到 js 內建的函式庫來完成這個方法。</p><ul><li><p><a href="https://www.w3school.com.cn/jsref/jsref_split.asp">split ()</a></p><ul><li>將字串分割成更小的字串，用陣列方式回傳。參數內如果使用 “” 空字符的話，將會以每個字符(字母)為分割單位。</li></ul></li><li><p><a href="https://www.w3school.com.cn/jsref/jsref_reverse.asp">reverse ()</a></p><ul><li>反轉原本陣列中的元素順序，不會創建新陣列。</li></ul></li><li><p><a href="https://www.w3school.com.cn/jsref/jsref_join.asp">join ()</a></p><ul><li>將陣列元素合併成一個字串。參數內如果使用 “” 空字符的話，將不會在陣列元素之間加入任何符號，而直接合成一個字串。如果參數是用 “,” ，則陣列元素合成字串時會用逗號隔開。</li></ul></li><li><p>this 關鍵字</p><ul><li><p>如果我們的方法要使用 data 中的資料，必須使用關鍵字<code> this</code> 來指定 Vue 物件之後才能使用 data 中的資料，不然他會顯示資料沒有定義。</p><p><img src="https://i.imgur.com/00UXLg0.png" alt="https://i.imgur.com/00UXLg0.png"></p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day8] 動態屬性指令(v-bind)</title>
      <link href="/2020/09/22/%5BDay8%5D%20%E5%8B%95%E6%85%8B%E5%B1%AC%E6%80%A7%E6%8C%87%E4%BB%A4(v-bind)/"/>
      <url>/2020/09/22/%5BDay8%5D%20%E5%8B%95%E6%85%8B%E5%B1%AC%E6%80%A7%E6%8C%87%E4%BB%A4(v-bind)/</url>
      
        <content type="html"><![CDATA[<h2 id="錯誤方式"><a href="#錯誤方式" class="headerlink" title="錯誤方式"></a>錯誤方式</h2><p>如果我們想將資料加進 html 屬性值，比如 <code>img</code> 的 <code>src</code> 中，可能會嘗試使用下列語法，但卻會發生錯誤。打開 console 它要我們使用 <code>v-bind</code> 的指令。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;url&#125;&#125;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            url:<span class="string">&#x27;https://i.imgur.com/S0wWwee.jpg&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><p><img src="https://i.imgur.com/UigNa34.png" alt="https://i.imgur.com/UigNa34.png"></p><h2 id="使用-v-bind"><a href="#使用-v-bind" class="headerlink" title="使用 v-bind"></a>使用 v-bind</h2><p>我們將上面的程式碼修改成下面這樣，可以發現圖片就順利跑出來了</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">&quot;url&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            url:<span class="string">&#x27;https://i.imgur.com/S0wWwee.jpg&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/dcEBQ27.jpg"></p><h2 id="動態切換類別樣式"><a href="#動態切換類別樣式" class="headerlink" title="動態切換類別樣式"></a>動態切換類別樣式</h2><p>原本我們要在 html 元素上新增類別樣式的語法是 <code>class=&quot; class 樣式名稱&quot;</code>，現在我們可以透過 <code>v-bind</code> 來動態加入類別樣式，使用 <code>class = &quot;&#123; &#39;class 樣式名稱&#39; ： 判斷式&#125;&quot;</code> ，以物件形式傳入樣式名稱還有判斷值，當判斷式為 <code>true</code> 時，代表加入 <code>class</code> 樣式，<code>false</code> 則沒有。加上先前有提到的 <code>checkbox</code> 用法，將判斷式的值透過 <code>v-model</code> 和 <code>checkbox</code> 點擊欄位綁定在一起，當按下點擊欄位時判斷式就會自動變成 <code>true</code>，<code>class</code> 樣式就會套入<br><img src="https://i.imgur.com/EMkBXVb.png" alt="https://i.imgur.com/EMkBXVb.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123;&#x27;red&#x27;:isRed,&#x27;bold&#x27;:isBold&#125;&quot;</span>&gt;</span>Hello Vue<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;isRed&quot;</span>&gt;</span>紅色</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;isBold&quot;</span>&gt;</span>變粗</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;.app&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            isRed:<span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">            isBold:<span class="literal">false</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.bold</span>&#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.red</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day7] 表單資料綁定</title>
      <link href="/2020/09/21/%5BDay7%5D%20%E8%A1%A8%E5%96%AE%E8%B3%87%E6%96%99%E7%B6%81%E5%AE%9A/"/>
      <url>/2020/09/21/%5BDay7%5D%20%E8%A1%A8%E5%96%AE%E8%B3%87%E6%96%99%E7%B6%81%E5%AE%9A/</url>
      
        <content type="html"><![CDATA[<p>今天我們來學習 Vue 如何綁定表單的資料欄位</p><h2 id="輸入欄位資料綁定"><a href="#輸入欄位資料綁定" class="headerlink" title="輸入欄位資料綁定"></a>輸入欄位資料綁定</h2><p>我們透過 <code>v-model</code> 將變數 <code>text</code> 資料與 <code>input</code> 單行輸入值綁在一起，也透過 <code>v-model</code> 將變數 <code>textarea</code> 資料與 <code>textarea</code> 多行資料輸入值綁在一起。此時，當我們在 <code>input</code> 單行欄位或 <code>textarea</code> 多行欄位輸入時，此時綁定的資料 <code>textarea</code> 還有 <code>text</code> 就會跟著變動。</p><p><img src="https://i.imgur.com/CTfJZ1m.png" alt="https://i.imgur.com/CTfJZ1m.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        input:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;text&quot;</span>&gt;</span> &#123;&#123;text&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        textarea:<span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;3&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;textarea&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">        &#123;&#123;textarea&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            text:<span class="string">&quot;&quot;</span>,</span><br><span class="line">            textarea:<span class="string">&quot;&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="Checkbox-多選"><a href="#Checkbox-多選" class="headerlink" title="Checkbox (多選)"></a>Checkbox (多選)</h2><p>我們用 <code>v-model</code> 將 <code>checkbox</code> 資料和 <code>checkbox</code> 多選欄位綁定在一起，當我們點擊 <code>checkbox</code> 欄位時，會發現資料 <code>checkbox</code> 值更改為 <code>true</code>，再點擊一次，<code>checkbox</code> 值更改為 <code>false</code>。如果我們使用 <code>v-model</code>  將 <code>checkbox</code> 點擊欄位和陣列資料 <code>checkboxarray</code> 綁在一起，並且設定各項點擊欄位的<code>value</code>，會發現當我們點擊各項 <code>checkbox</code> 點擊欄位時，他的 <code>value</code> 會被加進 <code>checkboxarray</code> 陣列內，再次點擊，反之就從陣列中刪除。</p><p><img src="https://i.imgur.com/IZVhlCd.png" alt="https://i.imgur.com/IZVhlCd.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span>吃晚餐<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        喜歡吃什麼肉？？</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkboxarray&quot;</span> <span class="attr">value</span>=<span class="string">&quot;chicken&quot;</span>&gt;</span>雞肉</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkboxarray&quot;</span> <span class="attr">value</span>=<span class="string">&quot;beef&quot;</span>&gt;</span>牛肉</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkboxarray&quot;</span> <span class="attr">value</span>=<span class="string">&quot;pork&quot;</span>&gt;</span>豬肉</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            checkbox:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            checkboxarray:[]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="Radio-單選"><a href="#Radio-單選" class="headerlink" title="Radio (單選)"></a>Radio (單選)</h2><p><code>Radio</code> 和 <code>Checkbox</code> 最大的差異在於一個是單選，一個是多選，如果我們用 <code>v-model</code> 將資料 <code>radio</code> 還和 <code>radio</code> 點擊欄位綁在一起，此時可以發現，當我點擊 <code>radio</code> 點擊欄位時，<code>radio</code> 資料會變成 <code>radio</code> 點擊欄位設定的 <code>value</code> 值，當我們點擊不同 <code>radio</code> 的點擊欄位時，<code>radio</code> 資料會變成我們的點擊欄位的 <code>value</code> ，就算我們把 <code>radio</code> 資料以陣列方式呈現，點擊後還是會以單一資料呈現，不像 <code>checkbox</code> 可以有多筆值。</p><p><img src="https://i.imgur.com/UKUE9SR.png" alt="https://i.imgur.com/UKUE9SR.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        喜歡吃什麼肉？？</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;chicken&quot;</span>&gt;</span>雞肉</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;beef&quot;</span>&gt;</span>牛肉</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;pork&quot;</span>&gt;</span>豬肉</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            radio:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="Select-下拉式選單-單選"><a href="#Select-下拉式選單-單選" class="headerlink" title="Select 下拉式選單 (單選)"></a>Select 下拉式選單 (單選)</h2><p>透過 <code>v-model</code> 將 <code>select</code> 下拉式選單和資料 <code>select</code> 綁在一起，此時選擇下拉式選單選項，選項中的<code>value</code> 就會放入資料 <code>select</code> 中，而資料 <code>select</code> 只能用單一選項的 <code>value</code> 當值。<code>select</code> 下拉選單的選項可以用 <code>disabled</code> 來產生無法選取的效果，以免使用者誤點。<br><img src="https://i.imgur.com/t1M7Ksu.png" alt="https://i.imgur.com/t1M7Ksu.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        喜歡吃什麼肉？？</span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">&quot;select&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">disabled</span>&gt;</span>-- 請選擇 --<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;chicken&quot;</span>&gt;</span>雞肉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;pork&quot;</span>&gt;</span>豬肉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;beef&quot;</span>&gt;</span>牛肉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            select:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day6] 迴圈(v-for)和條件式(v-if)</title>
      <link href="/2020/09/20/%5BDay6%5D%20%E8%BF%B4%E5%9C%88(v-for)%E5%92%8C%E6%A2%9D%E4%BB%B6%E5%BC%8F(v-if)/"/>
      <url>/2020/09/20/%5BDay6%5D%20%E8%BF%B4%E5%9C%88(v-for)%E5%92%8C%E6%A2%9D%E4%BB%B6%E5%BC%8F(v-if)/</url>
      
        <content type="html"><![CDATA[<p>通常我們會用 <code>for 迴圈</code>來存取陣列裡面的值，而在 Vue 中，我們則是使用 <code>v-for</code> 指令。 如果我們今天使用 <code>test 陣列</code>來紀錄學生考試成績，以物件形式當作陣列的值，物件裡面分別存放 <code>name</code> 學生姓名還有 <code>score</code> 考試成績。 透過 <code>v-for</code> 我們將 <code>test</code> 物件值存入 <code>in item</code> ，就很像 <code>foreach</code> 的概念，<code>item</code> 會自動代替陣列裡面的每個物件，而 <code>index</code> 就是物件在陣列的索引值，透過這個方式，<code>li 標籤</code>會自動生成陣列裡面物件的數目，而如果我們要將資料渲染到畫面，就用前面提到的 <code>&#123;&#123;&#125;&#125;</code> 方式來顯示資料。我們也可以在 <code>li 標籤</code>中加上 <code>v-if</code> 指令，就是 <code>if</code> 的概念，來設定條件式篩選資料，像是 <code>score&lt;60</code> ，找出成績低於 60 分的同學，由於前面的 <code>v-for</code> 已經將陣列資料設定到 <code>item</code>，如果要存取資料記得都要用 <code>item</code> 來取代物件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">app</span>&gt;</span></span><br><span class="line">        全班成績：</span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in test&quot;</span>&gt;</span>&#123;&#123;index&#125;&#125;.&#123;&#123;item.name&#125;&#125; 得分:&#123;&#123;item.score&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        不及格：</span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in test&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;item.score&lt;60&quot;</span>&gt;</span>&#123;&#123;index&#125;&#125;.&#123;&#123;item.name&#125;&#125; 得分:&#123;&#123;item.score&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            test:[</span><br><span class="line">                &#123;</span><br><span class="line">                    name: <span class="string">&#x27;Leo&#x27;</span>,</span><br><span class="line">                    score: <span class="number">44</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    name: <span class="string">&#x27;Amy&#x27;</span>,</span><br><span class="line">                    score: <span class="number">89</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    name: <span class="string">&#x27;Perter&#x27;</span>,</span><br><span class="line">                    score: <span class="number">59</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    name: <span class="string">&#x27;Leo&#x27;</span>,</span><br><span class="line">                    score: <span class="number">90</span></span><br><span class="line">                &#125;,</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/wbgbmTl.png" alt="https://i.imgur.com/wbgbmTl.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day5] 物件和陣列</title>
      <link href="/2020/09/19/%5BDay5%5D%20%E7%89%A9%E4%BB%B6%E5%92%8C%E9%99%A3%E5%88%97/"/>
      <url>/2020/09/19/%5BDay5%5D%20%E7%89%A9%E4%BB%B6%E5%92%8C%E9%99%A3%E5%88%97/</url>
      
        <content type="html"><![CDATA[<p>從前面的文章我們可以看出 Vue 是用物件的方式來存取資料，這邊我們就複習一下物件和陣列的差別。</p><h2 id="陣列"><a href="#陣列" class="headerlink" title="陣列"></a>陣列</h2><p>假設我們今天要計算全班同學的數學成績平均(假設班上只有3個人)，在沒有陣列的狀況下，寫法如下 。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> math1 = <span class="number">80</span>;</span><br><span class="line"><span class="keyword">var</span> math2 = <span class="number">90</span>;</span><br><span class="line"><span class="keyword">var</span> math3 = <span class="number">60</span>;</span><br><span class="line"><span class="keyword">var</span> total = math1 + math2 + math3;</span><br><span class="line"><span class="keyword">var</span> average = total / <span class="number">3</span></span><br></pre></td></tr></table></figure><p>但是如果使用陣列之後，可以這樣寫。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> math = [<span class="number">80</span>,<span class="number">90</span>,<span class="number">60</span>];</span><br><span class="line"><span class="keyword">var</span> total = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;math.length;i++)&#123;</span><br><span class="line">    total += math[i]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> average_math = total / <span class="number">3</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>雖然和第一個程式相比感覺程式沒有減少太多程式碼，但是當如果我們變數變多，比如50個人，就可以減少宣告很多變數，達到更簡潔的程式碼。 </p><h2 id="物件"><a href="#物件" class="headerlink" title="物件"></a>物件</h2><p>假設我們今天除了上面的數學考試，還多了英文考試，此時如果我們要紀錄每個同學的名字還有成績，如果用陣列的寫法如下。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = [<span class="string">&#x27;Leo&#x27;</span>,<span class="string">&#x27;Amy&#x27;</span>,<span class="string">&#x27;Perter&#x27;</span>] <span class="comment">//紀錄學生名字</span></span><br><span class="line"><span class="keyword">var</span> math = [<span class="number">80</span>,<span class="number">90</span>,<span class="number">60</span>]; <span class="comment">//紀錄數學成績</span></span><br><span class="line"><span class="keyword">var</span> english = [<span class="number">60</span>,<span class="number">80</span>,<span class="number">90</span>]; <span class="comment">//紀錄英文成績</span></span><br></pre></td></tr></table></figure><p>假設今天有很多個班級，如果每個班級都傳上面的變數，這樣我們要如何來分辨不同的班級，此時就可以使用到物件。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> class1 = &#123;</span><br><span class="line">    name:[<span class="string">&#x27;Leo&#x27;</span>,<span class="string">&#x27;Amy&#x27;</span>,<span class="string">&#x27;Perter&#x27;</span>],</span><br><span class="line">    math:[<span class="number">80</span>,<span class="number">90</span>,<span class="number">60</span>],</span><br><span class="line">    english:[<span class="number">60</span>,<span class="number">80</span>,<span class="number">90</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> class2 = &#123;</span><br><span class="line">    name:[<span class="string">&#x27;Jack&#x27;</span>,<span class="string">&#x27;Alleb&#x27;</span>,<span class="string">&#x27;Ray&#x27;</span>],</span><br><span class="line">    math:[<span class="number">80</span>,<span class="number">90</span>,<span class="number">60</span>],</span><br><span class="line">    english:[<span class="number">60</span>,<span class="number">80</span>,<span class="number">90</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="物件包物件"><a href="#物件包物件" class="headerlink" title="物件包物件"></a>物件包物件</h2><h3 id="宣告方法"><a href="#宣告方法" class="headerlink" title="宣告方法"></a>宣告方法</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> class1 = &#123;</span><br><span class="line">    <span class="string">&#x27;Leo&#x27;</span>:&#123;</span><br><span class="line">        math:<span class="number">80</span>,</span><br><span class="line">        english:<span class="number">60</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;Jack&#x27;</span>:&#123;</span><br><span class="line">        math:<span class="number">90</span>,</span><br><span class="line">        english:<span class="number">80</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;Amy&#x27;</span>:&#123;</span><br><span class="line">        math:<span class="number">60</span>,</span><br><span class="line">        english:<span class="number">55</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="取值方法"><a href="#取值方法" class="headerlink" title="取值方法"></a>取值方法</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(class1.Leo.math) <span class="comment">//取得 Leo 數學成績 80 分</span></span><br></pre></td></tr></table></figure><h2 id="物件包方法"><a href="#物件包方法" class="headerlink" title="物件包方法"></a>物件包方法</h2><h3 id="宣告方法-1"><a href="#宣告方法-1" class="headerlink" title="宣告方法"></a>宣告方法</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> class1 = &#123;</span><br><span class="line">    <span class="string">&#x27;Leo&#x27;</span>:&#123;</span><br><span class="line">        math:<span class="number">80</span>,</span><br><span class="line">        english:<span class="number">60</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;Jack&#x27;</span>:&#123;</span><br><span class="line">        math:<span class="number">90</span>,</span><br><span class="line">        english:<span class="number">80</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;Amy&#x27;</span>:&#123;</span><br><span class="line">        math:<span class="number">60</span>,</span><br><span class="line">        english:<span class="number">55</span></span><br><span class="line">    &#125;,</span><br><span class="line">    show:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;class1&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="取值方法-1"><a href="#取值方法-1" class="headerlink" title="取值方法"></a>取值方法</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class1.show() <span class="comment">// 記得一定要加()</span></span><br></pre></td></tr></table></figure><h2 id="陣列包物件"><a href="#陣列包物件" class="headerlink" title="陣列包物件"></a>陣列包物件</h2><h3 id="宣告方法-2"><a href="#宣告方法-2" class="headerlink" title="宣告方法"></a>宣告方法</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> clas = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;Leo&#x27;</span>:&#123;</span><br><span class="line">            math:<span class="number">80</span>,</span><br><span class="line">            english:<span class="number">60</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;Jack&#x27;</span>:&#123;</span><br><span class="line">            math:<span class="number">90</span>,</span><br><span class="line">            english:<span class="number">80</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;Amy&#x27;</span>:&#123;</span><br><span class="line">            math:<span class="number">60</span>,</span><br><span class="line">            english:<span class="number">55</span></span><br><span class="line">        &#125;,</span><br><span class="line">        show:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;class1&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;Leo&#x27;</span>:&#123;</span><br><span class="line">            math:<span class="number">80</span>,</span><br><span class="line">            english:<span class="number">60</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;Jack&#x27;</span>:&#123;</span><br><span class="line">            math:<span class="number">90</span>,</span><br><span class="line">            english:<span class="number">80</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;Amy&#x27;</span>:&#123;</span><br><span class="line">            math:<span class="number">60</span>,</span><br><span class="line">            english:<span class="number">55</span></span><br><span class="line">        &#125;,</span><br><span class="line">        show:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;class2&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">];</span><br></pre></td></tr></table></figure><h3 id="取值方法-2"><a href="#取值方法-2" class="headerlink" title="取值方法"></a>取值方法</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(clas[<span class="number">0</span>].Leo.math)<span class="comment">//取得陣列0中Leo的英文成績</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day4] 資料與畫面綁定的方法</title>
      <link href="/2020/09/18/%5BDay4%5D%20%E8%B3%87%E6%96%99%E8%88%87%E7%95%AB%E9%9D%A2%E7%B6%81%E5%AE%9A%E7%9A%84%E6%96%B9%E6%B3%95/"/>
      <url>/2020/09/18/%5BDay4%5D%20%E8%B3%87%E6%96%99%E8%88%87%E7%95%AB%E9%9D%A2%E7%B6%81%E5%AE%9A%E7%9A%84%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>介紹三種資料和畫面綁定常用的方式</p><h2 id="v-text"><a href="#v-text" class="headerlink" title="v-text"></a>v-text</h2><p>可以直接將資料顯示在綁定的 <code>html 標籤</code>內，與 <code>&#123;&#123;&#125;&#125;` 最大的差異在於 `v-text` 會取代原本標籤內的內容，而 `&#123;&#123;&#125;&#125;</code> 則是不會。像是 <code>message</code> 變數用 <code>v-text</code> 放入 <code>p 段落</code>，則 <code>p 段落</code>原本的內容就被取代。</p><h2 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a>v-html</h2><p>功能和 <code>v-text</code> 一樣，將資料直接顯示在綁定的 <code>html 標籤</code>內，也會取代標籤內原本的內容，與 <code>v-text</code> 差異在於如果綁定的資料有包含 <code>html 標籤</code>， <code>v-html</code> 會渲染所包含的標籤在網頁上，而不單純只是純文字。像是 <code>message</code>變數因為有包含 <code>a 標籤</code>，所以畫面就會渲染出連結的樣式，用法就像是 js 的<code>innerHTML</code>。最後官網有提醒我們，不要任意讓用戶輸入的資料用 <code>v-html</code> 方式呈現，因為這樣可能會產生 <code>XSS 攻擊</code>，不法人士可以在輸入欄位中插入惡意程式碼，並且透過網頁渲染執行，造成網頁資安風險。</p><a id="more"></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">p</span>&gt;</span>不會&#123;&#123;message&#125;&#125;取代<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-text</span>=<span class="string">&quot;message&quot;</span> &gt;</span>被取代<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-html</span>=<span class="string">&quot;message&quot;</span> &gt;</span>被取代<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            message: <span class="string">&#x27;&lt;a href=&quot;#&quot;&gt;Hello Vue&lt;/a&gt;&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/8Edq344.png" alt="https://i.imgur.com/8Edq344.png"></p><h2 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h2><p>常用在輸入欄位或表單值的綁定，像是上面的 <code>input 輸入欄位</code>就綁定資料 <code>message</code>，當 <code>input</code> 值改變則 <code>message</code> 值也會跟著改變，而 <code>message</code> 在畫面顯示的值也會跟著更動。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        輸入：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;message&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;.app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            message: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/cxDLjRk.png" alt="https://i.imgur.com/tyOaXH1.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day3] ＭVVM 架構</title>
      <link href="/2020/09/17/%5BDay3%5D%20%EF%BC%ADVVM%20%E6%9E%B6%E6%A7%8B/"/>
      <url>/2020/09/17/%5BDay3%5D%20%EF%BC%ADVVM%20%E6%9E%B6%E6%A7%8B/</url>
      
        <content type="html"><![CDATA[<p>雖然 Vue.js 有自己介紹它不是採用 ＭVVM 的框架，但 MVVM 的概念卻影響 Vue.js 的運作，因此讓我們先了解什麼是 ＭVVM 架構 。</p><h2 id="架構示意圖"><a href="#架構示意圖" class="headerlink" title="架構示意圖"></a>架構示意圖</h2><p><img src="https://i.imgur.com/lDYVYfr.png" alt="https://i.imgur.com/lDYVYfr.png"></p><h3 id="View"><a href="#View" class="headerlink" title="View"></a>View</h3><p>代表顯示在畫面的樣子，像是按鈕、文字輸入欄位等等</p><h3 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h3><p>主要取用資料的部分</p><a id="more"></a><h3 id="ViewModel"><a href="#ViewModel" class="headerlink" title="ViewModel"></a>ViewModel</h3><p>將資料和畫面綁定的連結器</p><h2 id="實際例子"><a href="#實際例子" class="headerlink" title="實際例子"></a>實際例子</h2><p>透過下面例子，就可了解 Vue 資料與畫面雙向綁定還有 ＭVVM 架構</p><p><img src="https://i.imgur.com/PMhzc1W.png" alt="https://i.imgur.com/PMhzc1W.png"></p><p><img src="https://i.imgur.com/lti9C7G.png" alt="https://i.imgur.com/lti9C7G.png"></p><h3 id="View-1"><a href="#View-1" class="headerlink" title="View"></a>View</h3><ul><li>input 輸入視窗</li><li>input 輸入視窗內的資料顯示</li><li>當我們修改 input 輸入視窗值，資料 text 值也會改變</li></ul><h3 id="Model-1"><a href="#Model-1" class="headerlink" title="Model"></a>Model</h3><ul><li>data 物件中的 text</li><li>當我們用 Vue 開發者工具修改資料 text 值，input 輸入視窗值也會改變</li></ul><h3 id="ViewModel-1"><a href="#ViewModel-1" class="headerlink" title="ViewModel"></a>ViewModel</h3><ul><li>宣告ㄧ個變數 vm Vue 物件，將這個物件與畫面 div 綁定來作為資料與畫面的綁定器。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day2] 第一個 Vue 應用程式</title>
      <link href="/2020/09/16/%5BDay2%5D%20%E7%AC%AC%E4%B8%80%E5%80%8B%20Vue%20%E6%87%89%E7%94%A8%E7%A8%8B%E5%BC%8F/"/>
      <url>/2020/09/16/%5BDay2%5D%20%E7%AC%AC%E4%B8%80%E5%80%8B%20Vue%20%E6%87%89%E7%94%A8%E7%A8%8B%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="先來個-Hello-Word"><a href="#先來個-Hello-Word" class="headerlink" title="先來個 Hello Word"></a>先來個 Hello Word</h2><p>首先記得要先載入 Vue 檔案</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>宣告一個變數名稱 app  的 Vue 物件</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue( &#123; &#125; );</span><br></pre></td></tr></table></figure><p>在 html 檔案內增加一個 div 區塊，並且設定區塊的 id 為 app</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在變數 app Vue 物件中新增 el ，亦即 element(元素) 的縮寫，它的值即是要綁定的元素，接著透過 id 將 div 畫面和 Vue 物件做綁定 </p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el:<span class="string">&#x27;#app&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><a id="more"></a><p>開啟 Vue 開發工具的 Component 會看到一個 Root 元件代表綁定成功</p><p><img src="https://i.imgur.com/6CFCBQy.png" alt="https://i.imgur.com/6CFCBQy.png"></p><p>在變數 app Vue 物件中新增 data 物件，它的值就是我們要在畫面顯示的資料</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">      el:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">      data:&#123; &#125;</span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><p>在 data 物件中宣告一個變數 text ，它的值設定為字串 Hello World</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            text:<span class="string">&#x27;Hello World&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>此時打開 Vue 除錯工具會發現多了 data 裡面有我們存放的變數</p><p><img src="https://i.imgur.com/ctWB2Ew.png" alt="https://i.imgur.com/ctWB2Ew.png"></p><p>最後一在 div 區塊中用 { { } } 來顯示變數 text</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">       &#123;&#123;text&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>成功建立自己第一個 Vue 應用程式</p><p><img src="https://i.imgur.com/PIQNVxN.png" alt="https://i.imgur.com/PIQNVxN.png"></p><h2 id="延伸概念"><a href="#延伸概念" class="headerlink" title="延伸概念"></a>延伸概念</h2><h3 id="資料與畫面雙向綁定"><a href="#資料與畫面雙向綁定" class="headerlink" title="資料與畫面雙向綁定"></a>資料與畫面雙向綁定</h3><p>當我們點擊 Vue 開發者工具的 text 變數值兩下，可以修改它的值，此時會發現畫面的資料也會隨著變數值改變而改變。</p><p><img src="https://i.imgur.com/uyxVJLd.png" alt="https://i.imgur.com/uyxVJLd.png"></p><h3 id="使用-class-的方式綁定資料"><a href="#使用-class-的方式綁定資料" class="headerlink" title="使用 class 的方式綁定資料"></a>使用 class 的方式綁定資料</h3><p>我們也可以用 class 的方式來綁定資料和畫面，結果會是一樣的，只是通常 id 還是比較常用的方式。</p><p><img src="https://i.imgur.com/eKH5EDK.png" alt="https://i.imgur.com/eKH5EDK.png"></p><h3 id="建立兩個-Vue-應用程式"><a href="#建立兩個-Vue-應用程式" class="headerlink" title="建立兩個 Vue 應用程式"></a>建立兩個 Vue 應用程式</h3><p>我們用上述的方式再建立另一個應用程式，會發現 Vue 除錯工具會出現兩個 Root 元件，而就算兩個 Vue 應用程式使用相同的變數名稱 text ，最後渲染在畫面的值也不會出錯，彼此應用程式資料內的值是獨立的。</p><p><img src="https://i.imgur.com/h9gcrXK.png" alt="https://i.imgur.com/h9gcrXK.png"></p><h3 id="應用程式綁定限制"><a href="#應用程式綁定限制" class="headerlink" title="應用程式綁定限制"></a>應用程式綁定限制</h3><p>一個 Vue app 只能綁定一個元素，像是如果把 app1 Vue 應用綁定在兩個元素上，第二個元素的 text 資料就不會成功渲染</p><p><img src="https://i.imgur.com/AauXhvZ.png" alt="https://i.imgur.com/AauXhvZ.png"></p><h3 id="巢狀應用程式"><a href="#巢狀應用程式" class="headerlink" title="巢狀應用程式"></a>巢狀應用程式</h3><p> Vue 不能將一個 Vue 應用包進另一個 Vue 應用，如果這樣錯會出錯</p><p><img src="https://i.imgur.com/KKBAypn.png" alt="https://i.imgur.com/KKBAypn.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Day1] 建立 Vue 開發環境 </title>
      <link href="/2020/09/15/%5BDay1%5D%20%E5%BB%BA%E7%AB%8B%20Vue%20%E9%96%8B%E7%99%BC%E7%92%B0%E5%A2%83/"/>
      <url>/2020/09/15/%5BDay1%5D%20%E5%BB%BA%E7%AB%8B%20Vue%20%E9%96%8B%E7%99%BC%E7%92%B0%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h3 id="1-安裝編譯器"><a href="#1-安裝編譯器" class="headerlink" title="1.安裝編譯器"></a>1.安裝編譯器</h3><ul><li><p>VScode 安裝</p><ul><li><a href="https://code.visualstudio.com/">官方下載</a></li></ul></li><li><p>VScode 插件安裝</p><ul><li><a href="https://marketplace.visualstudio.com/items?itemName=MS-CEINTL.vscode-language-pack-zh-hant">Chinese (Traditional) Language Pack for Visual Studio Code</a><ul><li>幫你把 VScode 繁體化</li></ul></li><li><a href="https://marketplace.visualstudio.com/items?itemName=yuichinukiyama.vscode-preview-server">Preview on Web Server</a><ul><li>安裝完之後，在編譯器建立的 <code>index.html</code> 檔上按<code>shift+control+L</code>，就可以開啟一個虛擬 Web Server 來開啟你的首頁程式，Server 網址是<a href="http://localhost:8080/index.html">http://localhost:8080/index.html</a> ，而不是一般在 <code>index.html</code> 點擊兩下，使用本地端 file://… 的方式打開首頁程式。使用這個插件好處是當你網頁程式有所更動時，網頁畫面也會隨著程式自動更新，不用再重新啟動瀏覽器，增加開發效率。</li><li>如果之後有學到 <code>Vue Cli</code> ，在執行發佈指令 <code>npm run build</code> 後，會將構建完成的檔案放到<code>dist</code> 資料夾中，這個資料夾內的 <code>index.html</code> 就無使用本地端 file://… 的方式直接打開，而是必須透過 Web Server 開啟。</li></ul></li><li><a href="https://marketplace.visualstudio.com/items?itemName=jcbuisson.vue">Vue</a><ul><li>會自動將 Vue.js 相關程式語法給 Hightlight 起來。</li></ul></li><li><a href="https://marketplace.visualstudio.com/items?itemName=hollowtree.vue-snippets">Vue 2 Snippets</a><ul><li>VScode 會自動跳出 Vue.js 關鍵字的補字。</li></ul></li></ul></li><li><p>個人推薦插件</p><ul><li><a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer">Bracket Pair Colorizer</a><ul><li>自動幫你將成對的大括弧還有小括弧加上顏色，使人更容易對齊程式碼</li></ul></li><li>i<a href="https://marketplace.visualstudio.com/items?itemName=oderwat.indent-rainbow">ndent-rainbow</a><ul><li>將程式碼縮排的部分增加顏色，使人更容易對齊程式碼</li></ul></li><li><a href="https://marketplace.visualstudio.com/items?itemName=TabNine.tabnine-vscode">TabNine</a><ul><li>根據你的輸入習慣，透過機器學習推薦程式碼補字片段給你</li></ul></li><li><a href="https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons">vscode-icons</a><ul><li>將你 VScode 檔案欄位的檔案加上相對應的小圖標<a id="more"></a><h3 id="2-安裝-chrome-擴充套件"><a href="#2-安裝-chrome-擴充套件" class="headerlink" title="2.安裝 chrome 擴充套件"></a>2.安裝 chrome 擴充套件</h3></li></ul></li></ul></li><li><p><a href="https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd?hl=zh-TW">Vue.js devtools</a></p><ul><li>好用的 Vue 除錯工具，可以查看整個 Vue 結構還有資料狀況，下載後如果有導入 Vue 檔，Vue 除錯工具就會出現在 chrome 除錯工具內，所以一開始下載完套件，Chrome 除錯台沒出現 Vue 除錯工具是正常的。</li></ul></li></ul><h3 id="3-載入Vue檔案"><a href="#3-載入Vue檔案" class="headerlink" title="3.載入Vue檔案"></a>3.載入Vue檔案</h3><ul><li><p><a href="https://cn.vuejs.org/v2/guide/installation.html">Vue.js官網教學文件</a></p><ul><li><p>Vue 檔案有分正式版還有開發版，建議選擇開發版，可以調用開法者工具，還有較完整的除錯提示。如果分別下載開發版本及生產版本，會發現開發版是 vue.js ，生產版是 vue.min.js ，文件上也提醒開發完成程式要上線時，記得把要把開發時引用的 vue.js 檔案更改為 vue.min.js。</p><p><img src="http://i.imgur.com/CxPK1UR.png" alt="http://i.imgur.com/CxPK1UR.png"></p></li><li><p>如果不想下載 Vue 檔案，Vue 也可以像是 jQuery 一樣，使用 <code>CDN</code> 的方式導入 Vue 相關檔案，我是選擇直接載入最新版，而沒有指定版本號，如果要指定版本號方式載入，記得要在載入檔案後面加上 <code>/dist/vue.js</code>，才會在 Vue 除錯工具看到 Vue 的載入版本號，也代表 Vue 成功載入。</p><p><img src="https://i.imgur.com/7HjXIHD.png" alt="https://i.imgur.com/7HjXIHD.png"></p></li></ul></li></ul><h3 id="4-開發環境準備完成"><a href="#4-開發環境準備完成" class="headerlink" title="4.開發環境準備完成"></a>4.開發環境準備完成</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;&lt;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&gt;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/zx5jwsH.png" alt="https://i.imgur.com/zx5jwsH.png"></p><blockquote><p>如果對文章有任何問題或者文章有誤歡迎底下留言，感謝～<br>明天讓我們建立自己第一支 Vue 應用程式。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用javascript來解leetcode(#1 Two Sum)(Easy)</title>
      <link href="/2020/06/24/%E4%BD%BF%E7%94%A8javascript%E4%BE%86%E8%A7%A3leetcode(#1%20Two%20Sum)(Easy)/"/>
      <url>/2020/06/24/%E4%BD%BF%E7%94%A8javascript%E4%BE%86%E8%A7%A3leetcode(#1%20Two%20Sum)(Easy)/</url>
      
        <content type="html"><![CDATA[<h2 id="題目原文"><a href="#題目原文" class="headerlink" title="題目原文"></a>題目原文</h2><p>Given an array of integers, return <strong>indices</strong> of the two numbers such that they add up to a specific target.</p><p>You may assume that each input would have <strong><em>exactly</em></strong> one solution, and you may not use the <em>same</em> element twice.</p><p><strong>Example:</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Given nums = [<span class="number">2</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">15</span>], target = <span class="number">9</span>,</span><br><span class="line"></span><br><span class="line">Because nums[<span class="number">0</span>] + nums[<span class="number">1</span>] = <span class="number">2</span> + <span class="number">7</span> = <span class="number">9</span>,</span><br><span class="line"><span class="keyword">return</span> [<span class="number">0</span>, <span class="number">1</span>].</span><br></pre></td></tr></table></figure><a id="more"></a><p><a href="https://leetcode.com/problems/two-sum/">題目網址</a></p><h2 id="題目翻譯"><a href="#題目翻譯" class="headerlink" title="題目翻譯"></a>題目翻譯</h2><ul><li>給予一組數列nums</li><li>給予一個target目標值</li><li>從數列nums中找出兩個數字相加是target值</li><li>將兩個數字在數列中的位置回傳</li><li>input數列只會找到一組可以合成target值的解(像是如果target=8則輸入數列不可能是[3,5,6,2]，因為有兩組解數字3和５，數字6和2)</li><li>每個數字不能重複使用(比如target=4，輸入數列[2,1,5]，不能將數字2使用二次來合成4)</li></ul><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><ul><li><p>假設情境</p><p>  某次資料結構的期中考，老師因為太多同學常常翹課所以起賭爛，決定出一份超難的考卷，下定決心要當掉一半的人。聰明的小明，在那次考試中拿到60分(target)的成績，逃過被老師當掉的風險，但天生個性白爛的他，決定去取笑那些考得比他低的同學，要找兩個加起來才剛好和他分數一樣60分的同學取笑。小明知道同學都把考卷放在自己的置物櫃裡，因此決定要翻同學的櫃子，偷拿出他們的考卷來當面取笑。</p></li><li><p>暴力破解法(Brute Force)</p><p>  小明來到同學的櫃子，先開了第一個櫃子發現是自己平常很討厭的小華，只考了34分。小明很想取笑他，因此開始從第一個櫃子之後依序翻櫃子，要找出只有考26分的同學，用來取笑小華，但是後來將全部櫃子都看過一遍，卻發現全班沒有人考26分??，只好又以2號櫃子考33分的小美當基準，要找考27分的同學。由於他先前沒有紀錄每個櫃子的同學考幾分，因此又要重頭開始翻同學的櫃子，最後終於在第45號櫃子找到考27分的同學，偷出他們的考卷，卻也浪費一堆時間。</p></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> twoSum = <span class="function"><span class="keyword">function</span>(<span class="params">nums, target</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> x=<span class="number">0</span>;x&lt;nums.length;x++)&#123;</span><br><span class="line">        <span class="keyword">let</span> goal=target-nums[x];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> y=x+<span class="number">1</span>;y&lt;=nums.length;y++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[y]===goal)</span><br><span class="line">                <span class="keyword">return</span> [x,y];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//nums[]表示櫃子裡的考卷分數</span></span><br><span class="line"><span class="comment">//target表示小明的成績</span></span><br><span class="line"><span class="comment">//nums[x]小華的成績</span></span><br><span class="line"><span class="comment">//goal代表小明成績與小華成績相減的值，另一位他要嘲笑的同學</span></span><br><span class="line"><span class="comment">//x,y代表櫃子號碼</span></span><br></pre></td></tr></table></figure><ul><li>使用dictionaries概念</li></ul><blockquote><p>Map、 dictionaries、associative arrays、hashtable 都是一樣的概念，一種用key:value來表達關係的資料結構，就把他想像成key是書頁而value是內容，透過索引key來快速找到所要的值value，而不同程式語言有不同的實作方式。</p></blockquote><p>又經過了一次期末考，白爛的小明又再次出動了，這次他考了70分，也一樣決定找兩位同學嘲笑。但是這次他學聰明了，先依序打開同學櫃子後，將同學的分數與櫃子號碼用表格紀錄下來。然後從第一個櫃子小華考了34分為基準，快速透過表格找到考26分的阿呆是在20號櫃子，快速將兩人考卷拿走。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用Map實作</span></span><br><span class="line"><span class="keyword">let</span> twoSum = <span class="function"><span class="keyword">function</span>(<span class="params">nums, target</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> Mymap = <span class="keyword">new</span> <span class="built_in">Map</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">        Mymap.set(nums[i],i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> x=<span class="number">0</span>;x&lt;nums.length;x++)&#123;</span><br><span class="line">        <span class="keyword">let</span> goal=target-nums[x];</span><br><span class="line">        <span class="keyword">if</span>(Mymap.has(goal)&amp;&amp;x!=Mymap.get(goal))</span><br><span class="line">            <span class="keyword">return</span>[x,Mymap.get(goal)];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//將班上同學的成績與櫃子號碼用Ｍap紀錄</span></span><br><span class="line"><span class="comment">//直覺會想說要將櫃子號碼存在key，成績存value</span></span><br><span class="line"><span class="comment">//但是最後題目是要回傳櫃子號碼，因此將櫃子號碼放在value，之後方便get得到值</span></span><br><span class="line"><span class="comment">//set(key,value)將資料加入表格</span></span><br><span class="line"><span class="comment">//get(key)用key得到value</span></span><br><span class="line"><span class="comment">//x!=Mymap.get(goal)預防x數字重複使用</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用Object實作</span></span><br><span class="line"><span class="keyword">let</span> twoSum = <span class="function"><span class="keyword">function</span>(<span class="params">nums, target</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> dict=&#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">        dict[nums[i]]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> x=<span class="number">0</span>;x&lt;nums.length;x++)&#123;</span><br><span class="line">        <span class="keyword">let</span> goal=target-nums[x];</span><br><span class="line">        <span class="keyword">if</span>(goal <span class="keyword">in</span> dict&amp;&amp;x!=dict[goal])</span><br><span class="line">            <span class="keyword">return</span>[x,dict[goal]];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//將班上同學的成績與櫃子號碼用object紀錄</span></span><br><span class="line"><span class="comment">//直覺會想說要將櫃子號碼存在key，成績存value</span></span><br><span class="line"><span class="comment">//但是最後題目是要回傳櫃子號碼，因此將櫃子號碼放在value，之後方便得到值</span></span><br><span class="line"><span class="comment">//設定值dict[key]=value</span></span><br><span class="line"><span class="comment">//in用法是會看goal值有沒有出現在object的key過，有就回傳true</span></span><br><span class="line"><span class="comment">//x!=dict[goal]預防x數字重複使用</span></span><br></pre></td></tr></table></figure><h2 id="參考文章"><a href="#參考文章" class="headerlink" title="參考文章"></a>參考文章</h2><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map">Map使用方式</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/in">Object in使用方式</a></li></ul><p>如果文章內容有任何問題或意見麻煩留言給我知道<br>感謝您</p>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
          <category> esay </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
