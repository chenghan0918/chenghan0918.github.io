<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Day3 ＭVVM 架構</title>
      <link href="/2021/02/08/Day3%20%EF%BC%ADVVM%20%E6%9E%B6%E6%A7%8B/"/>
      <url>/2021/02/08/Day3%20%EF%BC%ADVVM%20%E6%9E%B6%E6%A7%8B/</url>
      
        <content type="html"><![CDATA[<p>雖然 Vue.js 有自己介紹它不是採用 ＭVVM 的框架，但 MVVM 的概念卻影響 Vue.js 的運作，因此讓我們先了解什麼是 ＭVVM 架構 。</p><h2 id="架構示意圖"><a href="#架構示意圖" class="headerlink" title="架構示意圖"></a>架構示意圖</h2><p><img src="https://i.imgur.com/lDYVYfr.png" alt="https://i.imgur.com/lDYVYfr.png"></p><h3 id="View"><a href="#View" class="headerlink" title="View"></a>View</h3><p>代表顯示在畫面的樣子，像是按鈕、文字輸入欄位等等</p><h3 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h3><p>主要取用資料的部分</p><h3 id="ViewModel"><a href="#ViewModel" class="headerlink" title="ViewModel"></a>ViewModel</h3><p>將資料和畫面綁定的連結器</p><h2 id="實際例子"><a href="#實際例子" class="headerlink" title="實際例子"></a>實際例子</h2><p>透過下面例子，就可了解 Vue 資料與畫面雙向綁定還有 ＭVVM 架構</p><p><img src="https://i.imgur.com/PMhzc1W.png" alt="https://i.imgur.com/PMhzc1W.png"></p><p><img src="https://i.imgur.com/lti9C7G.png" alt="https://i.imgur.com/lti9C7G.png"></p><h3 id="View-1"><a href="#View-1" class="headerlink" title="View"></a>View</h3><ul><li>input 輸入視窗</li><li>input 輸入視窗內的資料顯示</li><li>當我們修改 input 輸入視窗值，資料 text 值也會改變</li></ul><h3 id="Model-1"><a href="#Model-1" class="headerlink" title="Model"></a>Model</h3><ul><li>data 物件中的 text</li><li>當我們用 Vue 開發者工具修改資料 text 值，input 輸入視窗值也會改變</li></ul><h3 id="ViewModel-1"><a href="#ViewModel-1" class="headerlink" title="ViewModel"></a>ViewModel</h3><ul><li>宣告ㄧ個變數 vm Vue 物件，將這個物件與畫面 div 綁定來作為資料與畫面的綁定器。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Day2 第一個 Vue 應用程式</title>
      <link href="/2021/02/08/Day2%20%E7%AC%AC%E4%B8%80%E5%80%8B%20Vue%20%E6%87%89%E7%94%A8%E7%A8%8B%E5%BC%8F/"/>
      <url>/2021/02/08/Day2%20%E7%AC%AC%E4%B8%80%E5%80%8B%20Vue%20%E6%87%89%E7%94%A8%E7%A8%8B%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="先來個-Hello-Word"><a href="#先來個-Hello-Word" class="headerlink" title="先來個 Hello Word"></a>先來個 Hello Word</h2><p>首先記得要先載入 Vue 檔案</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>宣告一個變數名稱 app  的 Vue 物件</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue( &#123; &#125; );</span><br></pre></td></tr></table></figure><p>在 html 檔案內增加一個 div 區塊，並且設定區塊的 id 為 app</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>在變數 app Vue 物件中新增 el ，亦即 element(元素) 的縮寫，它的值即是要綁定的元素，接著透過 id 將 div 畫面和 Vue 物件做綁定 </p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el:<span class="string">&#x27;#app&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>開啟 Vue 開發工具的 Component 會看到一個 Root 元件代表綁定成功</p><p><img src="https://i.imgur.com/6CFCBQy.png" alt="https://i.imgur.com/6CFCBQy.png"></p><p>在變數 app Vue 物件中新增 data 物件，它的值就是我們要在畫面顯示的資料</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">      el:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">      data:&#123; &#125;</span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><p>在 data 物件中宣告一個變數 text ，它的值設定為字串 Hello World</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            text:<span class="string">&#x27;Hello World&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>此時打開 Vue 除錯工具會發現多了 data 裡面有我們存放的變數</p><p><img src="https://i.imgur.com/ctWB2Ew.png" alt="https://i.imgur.com/ctWB2Ew.png"></p><p>最後一在 div 區塊中用 { { } } 來顯示變數 text</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">       &#123; &#123; text &#125; &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>成功建立自己第一個 Vue 應用程式</p><p><img src="https://i.imgur.com/PIQNVxN.png" alt="https://i.imgur.com/PIQNVxN.png"></p><h2 id="延伸概念"><a href="#延伸概念" class="headerlink" title="延伸概念"></a>延伸概念</h2><h3 id="資料與畫面雙向綁定"><a href="#資料與畫面雙向綁定" class="headerlink" title="資料與畫面雙向綁定"></a>資料與畫面雙向綁定</h3><p>當我們點擊 Vue 開發者工具的 text 變數值兩下，可以修改它的值，此時會發現畫面的資料也會隨著變數值改變而改變。</p><p><img src="https://i.imgur.com/uyxVJLd.png" alt="https://i.imgur.com/uyxVJLd.png"></p><h3 id="使用-class-的方式綁定資料"><a href="#使用-class-的方式綁定資料" class="headerlink" title="使用 class 的方式綁定資料"></a>使用 class 的方式綁定資料</h3><p>我們也可以用 class 的方式來綁定資料和畫面，結果會是一樣的，只是通常 id 還是比較常用的方式。</p><p><img src="https://i.imgur.com/eKH5EDK.png" alt="https://i.imgur.com/eKH5EDK.png"></p><h3 id="建立兩個-Vue-應用程式"><a href="#建立兩個-Vue-應用程式" class="headerlink" title="建立兩個 Vue 應用程式"></a>建立兩個 Vue 應用程式</h3><p>我們用上述的方式再建立另一個應用程式，會發現 Vue 除錯工具會出現兩個 Root 元件，而就算兩個 Vue 應用程式使用相同的變數名稱 text ，最後渲染在畫面的值也不會出錯，彼此應用程式資料內的值是獨立的。</p><p><img src="https://i.imgur.com/h9gcrXK.png" alt="https://i.imgur.com/h9gcrXK.png"></p><h3 id="應用程式綁定限制"><a href="#應用程式綁定限制" class="headerlink" title="應用程式綁定限制"></a>應用程式綁定限制</h3><p>一個 Vue app 只能綁定一個元素，像是如果把 app1 Vue 應用綁定在兩個元素上，第二個元素的 text 資料就不會成功渲染</p><p><img src="https://i.imgur.com/AauXhvZ.png" alt="https://i.imgur.com/AauXhvZ.png"></p><h3 id="巢狀應用程式"><a href="#巢狀應用程式" class="headerlink" title="巢狀應用程式"></a>巢狀應用程式</h3><p> Vue 不能將一個 Vue 應用包進另一個 Vue 應用，如果這樣錯會出錯</p><p><img src="https://i.imgur.com/KKBAypn.png" alt="https://i.imgur.com/KKBAypn.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Day1 建立 Vue 開發環境</title>
      <link href="/2021/02/07/Day1%20%E5%BB%BA%E7%AB%8B%20Vue%20%E9%96%8B%E7%99%BC%E7%92%B0%E5%A2%83/"/>
      <url>/2021/02/07/Day1%20%E5%BB%BA%E7%AB%8B%20Vue%20%E9%96%8B%E7%99%BC%E7%92%B0%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安裝編譯器"><a href="#1-安裝編譯器" class="headerlink" title="1.安裝編譯器"></a>1.安裝編譯器</h2><ul><li>VScode 安裝<ul><li><a href="https://code.visualstudio.com/">官方下載</a></li></ul></li><li>VScode 插件安裝<ul><li><a href="https://marketplace.visualstudio.com/items?itemName=MS-CEINTL.vscode-language-pack-zh-hant">Chinese (Traditional) Language Pack for Visual Studio Code</a><ul><li>幫你把 VScode 繁體化</li></ul></li><li><a href="https://marketplace.visualstudio.com/items?itemName=yuichinukiyama.vscode-preview-server">Preview on Web Server</a><ul><li>安裝完之後，在編譯器建立的 <code>index.html</code> 檔上按<code>shift+control+L</code>，就可以開啟一個虛擬 Web Server 來開啟你的首頁程式，Server 網址是<a href="http://localhost:8080/index.html">http://localhost:8080/index.html</a> ，而不是一般在 <code>index.html</code> 點擊兩下，使用本地端 file://… 的方式打開首頁程式。使用這個插件好處是當你網頁程式有所更動時，網頁畫面也會隨著程式自動更新，不用再重新啟動瀏覽器，增加開發效率。</li><li>如果之後有學到 <code>Vue Cli</code> ，在執行發佈指令 <code>npm run build</code> 後，會將構建完成的檔案放到<code>dist</code> 資料夾中，這個資料夾內的 <code>index.html</code> 就無使用本地端 file://… 的方式直接打開，而是必須透過 Web Server 開啟。</li></ul></li><li><a href="https://marketplace.visualstudio.com/items?itemName=jcbuisson.vue">Vue</a><ul><li>會自動將 Vue.js 相關程式語法給 Hightlight 起來。</li></ul></li><li><a href="https://marketplace.visualstudio.com/items?itemName=hollowtree.vue-snippets">Vue 2 Snippets</a><ul><li>VScode 會自動跳出 Vue.js 關鍵字的補字。</li></ul></li></ul></li><li>個人推薦插件<ul><li><a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer">Bracket Pair Colorizer</a><ul><li>自動幫你將成對的大括弧還有小括弧加上顏色，使人更容易對齊程式碼</li></ul></li><li>i<a href="https://marketplace.visualstudio.com/items?itemName=oderwat.indent-rainbow">ndent-rainbow</a><ul><li>將程式碼縮排的部分增加顏色，使人更容易對齊程式碼</li></ul></li><li><a href="https://marketplace.visualstudio.com/items?itemName=TabNine.tabnine-vscode">TabNine</a><ul><li>根據你的輸入習慣，透過機器學習推薦程式碼補字片段給你</li></ul></li><li><a href="https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons">vscode-icons</a><ul><li>將你 VScode 檔案欄位的檔案加上相對應的小圖標</li></ul></li></ul></li></ul><h2 id="2-安裝-chrome-擴充套件"><a href="#2-安裝-chrome-擴充套件" class="headerlink" title="2.安裝 chrome 擴充套件"></a>2.安裝 chrome 擴充套件</h2><ul><li><a href="https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd?hl=zh-TW">Vue.js devtools</a><ul><li>好用的 Vue 除錯工具，可以查看整個 Vue 結構還有資料狀況，下載後如果有導入 Vue 檔，Vue 除錯工具就會出現在 chrome 除錯工具內，所以一開始下載完套件，Chrome 除錯台沒出現 Vue 除錯工具是正常的。</li></ul></li></ul><h2 id="3-載入Vue檔案"><a href="#3-載入Vue檔案" class="headerlink" title="3.載入Vue檔案"></a>3.載入Vue檔案</h2><ul><li><p><a href="https://cn.vuejs.org/v2/guide/installation.html">Vue.js官網教學文件</a></p><ul><li><p>Vue 檔案有分正式版還有開發版，建議選擇開發版，可以調用開法者工具，還有較完整的除錯提示。如果分別下載開發版本及生產版本，會發現開發版是 vue.js ，生產版是 vue.min.js ，文件上也提醒開發完成程式要上線時，記得把要把開發時引用的 vue.js 檔案更改為 vue.min.js。</p><p><img src="http://i.imgur.com/CxPK1UR.png" alt="http://i.imgur.com/CxPK1UR.png"></p></li><li><p>如果不想下載 Vue 檔案，Vue 也可以像是 jQuery 一樣，使用 <code>CDN</code> 的方式導入 Vue 相關檔案，我是選擇直接載入最新版，而沒有指定版本號，如果要指定版本號方式載入，記得要在載入檔案後面加上 <code>/dist/vue.js</code>，才會在 Vue 除錯工具看到 Vue 的載入版本號，也代表 Vue 成功載入。</p><p><img src="https://i.imgur.com/7HjXIHD.png" alt="https://i.imgur.com/7HjXIHD.png"></p></li></ul></li></ul><h2 id="4-開發環境準備完成"><a href="#4-開發環境準備完成" class="headerlink" title="4.開發環境準備完成"></a>4.開發環境準備完成</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;&lt;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&gt;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/zx5jwsH.png" alt="https://i.imgur.com/zx5jwsH.png"></p><blockquote><p>如果對文章有任何問題或者文章有誤歡迎底下留言，感謝～<br>明天讓我們建立自己第一支 Vue 應用程式。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> it鐵人競賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用javascript來解leetcode(#1 Two Sum)(Easy)</title>
      <link href="/2021/02/07/%E4%BD%BF%E7%94%A8javascript%E4%BE%86%E8%A7%A3leetcode(#1%20Two%20Sum)(Easy)/"/>
      <url>/2021/02/07/%E4%BD%BF%E7%94%A8javascript%E4%BE%86%E8%A7%A3leetcode(#1%20Two%20Sum)(Easy)/</url>
      
        <content type="html"><![CDATA[<h2 id="題目原文"><a href="#題目原文" class="headerlink" title="題目原文"></a>題目原文</h2><p>Given an array of integers, return <strong>indices</strong> of the two numbers such that they add up to a specific target.</p><p>You may assume that each input would have <strong><em>exactly</em></strong> one solution, and you may not use the <em>same</em> element twice.</p><p><strong>Example:</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Given nums = [<span class="number">2</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">15</span>], target = <span class="number">9</span>,</span><br><span class="line"></span><br><span class="line">Because nums[<span class="number">0</span>] + nums[<span class="number">1</span>] = <span class="number">2</span> + <span class="number">7</span> = <span class="number">9</span>,</span><br><span class="line"><span class="keyword">return</span> [<span class="number">0</span>, <span class="number">1</span>].</span><br></pre></td></tr></table></figure><a id="more"></a><p><a href="https://leetcode.com/problems/two-sum/">題目網址</a></p><h2 id="題目翻譯"><a href="#題目翻譯" class="headerlink" title="題目翻譯"></a>題目翻譯</h2><ul><li>給予一組數列nums</li><li>給予一個target目標值</li><li>從數列nums中找出兩個數字相加是target值</li><li>將兩個數字在數列中的位置回傳</li><li>input數列只會找到一組可以合成target值的解(像是如果target=8則輸入數列不可能是[3,5,6,2]，因為有兩組解數字3和５，數字6和2)</li><li>每個數字不能重複使用(比如target=4，輸入數列[2,1,5]，不能將數字2使用二次來合成4)</li></ul><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><ul><li><p>假設情境</p><p>  某次資料結構的期中考，老師因為太多同學常常翹課所以起賭爛，決定出一份超難的考卷，下定決心要當掉一半的人。聰明的小明，在那次考試中拿到60分(target)的成績，逃過被老師當掉的風險，但天生個性白爛的他，決定去取笑那些考得比他低的同學，要找兩個加起來才剛好和他分數一樣60分的同學取笑。小明知道同學都把考卷放在自己的置物櫃裡，因此決定要翻同學的櫃子，偷拿出他們的考卷來當面取笑。</p></li><li><p>暴力破解法(Brute Force)</p><p>  小明來到同學的櫃子，先開了第一個櫃子發現是自己平常很討厭的小華，只考了34分。小明很想取笑他，因此開始從第一個櫃子之後依序翻櫃子，要找出只有考26分的同學，用來取笑小華，但是後來將全部櫃子都看過一遍，卻發現全班沒有人考26分??，只好又以2號櫃子考33分的小美當基準，要找考27分的同學。由於他先前沒有紀錄每個櫃子的同學考幾分，因此又要重頭開始翻同學的櫃子，最後終於在第45號櫃子找到考27分的同學，偷出他們的考卷，卻也浪費一堆時間。</p></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> twoSum = <span class="function"><span class="keyword">function</span>(<span class="params">nums, target</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> x=<span class="number">0</span>;x&lt;nums.length;x++)&#123;</span><br><span class="line">        <span class="keyword">let</span> goal=target-nums[x];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> y=x+<span class="number">1</span>;y&lt;=nums.length;y++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[y]===goal)</span><br><span class="line">                <span class="keyword">return</span> [x,y];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//nums[]表示櫃子裡的考卷分數</span></span><br><span class="line"><span class="comment">//target表示小明的成績</span></span><br><span class="line"><span class="comment">//nums[x]小華的成績</span></span><br><span class="line"><span class="comment">//goal代表小明成績與小華成績相減的值，另一位他要嘲笑的同學</span></span><br><span class="line"><span class="comment">//x,y代表櫃子號碼</span></span><br></pre></td></tr></table></figure><ul><li>使用dictionaries概念</li></ul><blockquote><p>Map、 dictionaries、associative arrays、hashtable 都是一樣的概念，一種用key:value來表達關係的資料結構，就把他想像成key是書頁而value是內容，透過索引key來快速找到所要的值value，而不同程式語言有不同的實作方式。</p></blockquote><p>又經過了一次期末考，白爛的小明又再次出動了，這次他考了70分，也一樣決定找兩位同學嘲笑。但是這次他學聰明了，先依序打開同學櫃子後，將同學的分數與櫃子號碼用表格紀錄下來。然後從第一個櫃子小華考了34分為基準，快速透過表格找到考26分的阿呆是在20號櫃子，快速將兩人考卷拿走。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用Map實作</span></span><br><span class="line"><span class="keyword">let</span> twoSum = <span class="function"><span class="keyword">function</span>(<span class="params">nums, target</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> Mymap = <span class="keyword">new</span> <span class="built_in">Map</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">        Mymap.set(nums[i],i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> x=<span class="number">0</span>;x&lt;nums.length;x++)&#123;</span><br><span class="line">        <span class="keyword">let</span> goal=target-nums[x];</span><br><span class="line">        <span class="keyword">if</span>(Mymap.has(goal)&amp;&amp;x!=Mymap.get(goal))</span><br><span class="line">            <span class="keyword">return</span>[x,Mymap.get(goal)];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//將班上同學的成績與櫃子號碼用Ｍap紀錄</span></span><br><span class="line"><span class="comment">//直覺會想說要將櫃子號碼存在key，成績存value</span></span><br><span class="line"><span class="comment">//但是最後題目是要回傳櫃子號碼，因此將櫃子號碼放在value，之後方便get得到值</span></span><br><span class="line"><span class="comment">//set(key,value)將資料加入表格</span></span><br><span class="line"><span class="comment">//get(key)用key得到value</span></span><br><span class="line"><span class="comment">//x!=Mymap.get(goal)預防x數字重複使用</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用Object實作</span></span><br><span class="line"><span class="keyword">let</span> twoSum = <span class="function"><span class="keyword">function</span>(<span class="params">nums, target</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> dict=&#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">        dict[nums[i]]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> x=<span class="number">0</span>;x&lt;nums.length;x++)&#123;</span><br><span class="line">        <span class="keyword">let</span> goal=target-nums[x];</span><br><span class="line">        <span class="keyword">if</span>(goal <span class="keyword">in</span> dict&amp;&amp;x!=dict[goal])</span><br><span class="line">            <span class="keyword">return</span>[x,dict[goal]];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//將班上同學的成績與櫃子號碼用object紀錄</span></span><br><span class="line"><span class="comment">//直覺會想說要將櫃子號碼存在key，成績存value</span></span><br><span class="line"><span class="comment">//但是最後題目是要回傳櫃子號碼，因此將櫃子號碼放在value，之後方便得到值</span></span><br><span class="line"><span class="comment">//設定值dict[key]=value</span></span><br><span class="line"><span class="comment">//in用法是會看goal值有沒有出現在object的key過，有就回傳true</span></span><br><span class="line"><span class="comment">//x!=dict[goal]預防x數字重複使用</span></span><br></pre></td></tr></table></figure><h2 id="參考文章"><a href="#參考文章" class="headerlink" title="參考文章"></a>參考文章</h2><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map">Map使用方式</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/in">Object in使用方式</a></li></ul><p>如果文章內容有任何問題或意見麻煩留言給我知道<br>感謝您</p>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
          <category> esay </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue Cli-Webpack</title>
      <link href="/2020/11/24/Vue-Cli-Webpack/"/>
      <url>/2020/11/24/Vue-Cli-Webpack/</url>
      
        <content type="html"><![CDATA[<h1 id="webpack-運行邏輯"><a href="#webpack-運行邏輯" class="headerlink" title="webpack 運行邏輯"></a>webpack 運行邏輯</h1><p><img src="https://i.imgur.com/FbxYqzy.png"><br>main.js 是主要的進入點(entry)，webpack 會監控 main.js , 當main.js 有更動時 webpack 就自動編譯，編譯成 css,js 等遊覽器看得懂的語言。<br>由於 main.js 只是一個 js 檔案，無法看得懂 .vue 或者 .scss 檔，因此 webpack 有提供 loader 工具，來幫助 main.js 理解輸出這些檔案。</p><h1 id="webpack-腳本檔案介紹"><a href="#webpack-腳本檔案介紹" class="headerlink" title="webpack 腳本檔案介紹"></a>webpack 腳本檔案介紹</h1><p>在 build 資料夾裡面有 webpack 腳本檔案，分別是:</p><ul><li>webpack.base.conf.js<ul><li>主要核心</li></ul></li><li>webpack.dev.conf.js<ul><li>給我們開發中預覽畫面用的</li></ul></li><li>webpack.prod.conf.js<ul><li>輸出真正產品用的<a id="more"></a><h1 id="webpack-base-介紹"><a href="#webpack-base-介紹" class="headerlink" title="webpack.base 介紹"></a>webpack.base 介紹</h1></li></ul></li><li>entry 進入點和 output 輸出點<br><img src="https://i.imgur.com/W3KxOwW.png"></li><li>loaer 的寫在這些 module<ul><li>test: /.(png|jpe?g|gif|svg)(?.<em>)?$/,test: /.(png|jpe?g|gif|svg)(?.</em>)?$/ 這個 loader 會將圖檔小於 10 KB 的圖檔用 base64 方式編碼呈現<br><img src="https://i.imgur.com/ykoXXUp.png"></li></ul></li><li>resolve<ul><li>extensions: [‘.js’, ‘.vue’, ‘.json’],這是讓你可以省略副檔名的</li><li>alias:裡面是放各種路徑的縮寫，像是 src 就可以用 @ 來替代<br><img src="https://i.imgur.com/DaNMMgb.png"></li></ul></li></ul><h1 id="config-環境變數"><a href="#config-環境變數" class="headerlink" title="config 環境變數"></a>config 環境變數</h1><p>在 webpack.base.conf.js 的 output 裡面你會看到它輸出的路徑 <strong>path: config.build.assetsRoot</strong>,裡面的 build 就代表 build 資料夾，裡面檔案如下：</p><ul><li>index.js 代表整個運行環境，比如設定 port 口</li><li>dev.env.js 設定開發時的環境變數</li><li>prod.env.js 設定發布時的環境變數</li><li>開發時和發布時環境變數可能不太一樣(ajax路徑不相同)<h1 id="自定義環境變數"><a href="#自定義環境變數" class="headerlink" title="自定義環境變數"></a>自定義環境變數</h1></li></ul><p>1.我們在 dev.env.js 的 module.exports 底下新增一個環境變數<br>記得除了加上’’外還要加””，不然會出錯，還有記得改完後要重啟環境，因為我們新增的是環境變數。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HTTP_PATH: &#39;&quot;http:&#x2F;&#x2F;localhost&#x2F;&quot;&#39;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/A6C8oJM.png"><br>2.最後我們來到 scr/components 裡面的 App.vue 檔，移到最下面 js 部分，在 return 資料的部分，我們輸出兩個環境變數</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msg: process.env.NODE_ENV,</span><br><span class="line">http: process.env.HTTP_PATH</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/JtcpnN8.png"><br>3.使用 <strong>npm run dev</strong>重啟環境，環境變數加入成功<br><img src="https://i.imgur.com/RoFpHJn.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue Cli-簡介</title>
      <link href="/2020/11/23/Vue-Cli%E7%B0%A1%E4%BB%8B/"/>
      <url>/2020/11/23/Vue-Cli%E7%B0%A1%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-Cli-介紹"><a href="#Vue-Cli-介紹" class="headerlink" title="Vue Cli 介紹"></a>Vue Cli 介紹</h1><ol><li>基於 Webpack 所建置的開發工具<ul><li>Webpack: 現在前端技術發展快速，多了很多 Preprocess (前處理器)工具與框架，像是Scss,Vue， 但是瀏覽器只看得懂(js,css,html)，因此Webpack 就出現了，它幫我們編譯Preprocess 成瀏覽器得懂的內容然後打包成一包 dis 發布檔，直接讓後端上傳到 server。<br><img src="https://i.imgur.com/P7hOVln.png"><a id="more"></a></li></ul></li><li>方便使用各種第三方套件(BS4,Vue Router)</li><li>可以運行 Sass,Bebel 等編譯工具</li><li>便於開發 SPA 網頁工具</li><li>快速搭建開發環境</li></ol><h1 id="Vue-Cli-建構"><a href="#Vue-Cli-建構" class="headerlink" title="Vue Cli 建構"></a>Vue Cli 建構</h1><ol><li><p>安裝 <a href="https://nodejs.org/en/">Node.js</a></p> <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v <span class="comment">//確認 node 安裝成功</span></span><br></pre></td></tr></table></figure></li><li><p>安裝 <a href="https://cli.vuejs.org/guide/installation.html">Vue Cli</a></p> <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-cli -g <span class="comment">// 以全域方式安裝 vue-cli 2.版本</span></span><br></pre></td></tr></table></figure></li><li><p>啟用 webpack</p> <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">vue list  <span class="comment">// 列出可用樣板</span></span><br><span class="line">vue init webpack test <span class="comment">// vue init 樣板名稱 專案名稱</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/9c3EgkL.png"><br><img src="https://i.imgur.com/Dv8w0Dm.png"></p></li></ol><ol start="4"><li><p>安裝模組</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install &#x2F;&#x2F;安裝package.json內相依套件 </span><br><span class="line">&#x2F;&#x2F; 安裝完後就會多一個 node_modules 的資料夾</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/9ZcOby3.png"></p></li><li><p>執行測試環境</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev &#x2F;&#x2F;執行測試環境</span><br></pre></td></tr></table></figure><p> <img src="https://i.imgur.com/lsD2Ms9.png"></p></li></ol><p>   <img src="https://i.imgur.com/FijGIsb.png"></p><ol start="6"><li><p>正式發布檔</p> <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build <span class="comment">// 目錄會多 dis 資料夾 裡面的檔案是正式要放到 server的</span></span><br></pre></td></tr></table></figure><p> <img src="https://i.imgur.com/PFdom52.png"></p></li></ol><h1 id="Vue-Cli-資料夾結構"><a href="#Vue-Cli-資料夾結構" class="headerlink" title="Vue Cli 資料夾結構"></a>Vue Cli 資料夾結構</h1><ol><li><p>主檔案結構</p><p><img src="https://i.imgur.com/lecm6cz.png"></p></li></ol><ol start="2"><li><p>被注入程式的 index.html</p><p><img src="https://i.imgur.com/QZ1ZfsB.png"></p></li></ol><ol start="3"><li><p>scr </p><ul><li>main.js 是所有 Vue.js 的進入點 entry，程式會注入到 index.html</li></ul><p><img src="https://i.imgur.com/Sgk77Fv.png"></p><ul><li>assets 資料夾裡面放會被編譯的檔案，像是圖檔小於某個大小，圖檔會用 base64 編譯</li></ul></li><li><p>satic 資料夾內檔案不會被編譯</p></li><li><p>dis 資料夾</p><ul><li>裡面的 index.hml 是正式發布的檔案，需要用 server 執行</li></ul></li></ol><p><img src="https://i.imgur.com/GGV96D1.png"></p><ol start="6"><li>build 資料夾<ul><li>裡面有 webpack 的設定檔</li></ul></li><li>config 資料夾<ul><li>裡面有設定環境變數的檔案</li></ul></li><li>node_modules<ul><li>裡面為所有安裝的套件，套件清單在 package.json</li></ul></li><li>.babelrc<ul><li>ES6 語法不能在所有瀏覽器上執行，透過 Beble 可以編譯 ES6 成為大部分瀏覽器可以了解的語法</li></ul></li><li>.postcssrc.js<ul><li>css 前處理器的編譯器</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
